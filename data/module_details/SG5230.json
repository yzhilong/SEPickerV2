{"acadYear": "2020/2021", "description": "A prototype is typically created quickly and simulates only essential aspects of the system. The prototype code might be eventually thrown away, or could form the basis for constructing a component of the final product.\n\nUsing prototypes, developers can obtain valuable feedback from the users early in the project lifecycle and can assess whether the software architecture can support demanding technical requirements. Prototypes also allow managers to assess the feasibility of estimates and whether the deadlines proposed can be successfully met.\n\nThis course presents a software prototyping framework and how it might be supported directly by the Python programming language.", "title": "Software Prototyping", "department": "Institute of Systems Science", "faculty": "Institute of Systems Science", "workload": [1.5, 0.5, 0.5, 3, 2], "prerequisite": "The course pre-requisite would be a professional competency in a contemporary programming language such as C#, Java or C++.", "moduleCredit": "3", "moduleCode": "SG5230", "semesterData": []}