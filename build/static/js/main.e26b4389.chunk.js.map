{"version":3,"sources":["pages/Favourites.js","components/selector_components/EssentialModuleSelector.js","components/NavBar.js","components/selector_components/OptionalModuleSelector.js","components/selector_components/SchoolSelector.js","components/selector_components/ContinentSelector.js","components/selector_components/CountrySelector.js","components/University.js","components/selector_components/ModuleMapping.js","components/selector_components/School.js","components/selector_components/Country.js","components/selector_components/Continent.js","components/selector_components/Results.js","pages/Selector.js","App.js","reportWebVitals.js","index.js"],"names":["Favourites","props","NavBar","to","useStyles","makeStyles","theme","root","width","marginTop","spacing","modulesArr","require","modules","i","length","push","module","modCode","split","EssentialModulesSelector","classes","Fragment","className","Autocomplete","autoHighlight","onChange","event","val","stateSetter","map","mod","multiple","limitTags","id","options","getOptionLabel","defaultValue","renderInput","params","TextField","variant","label","placeholder","OptionalModulesSelector","ContinentSelector","name","continent","prevState","includes","filter","item","onClickContinentHandler","checked","icon","style","display","flex","backgroundColor","alignSelf","color","size","borderColor","borderWidth","borderRadius","overflow","schoolsArr","schools","school","SchoolSelector","option","countriesArr","countries","country","CountrySelector","University","ModuleMapping","moduleName","result","useState","open","setOpen","equivalentNUSModules","console","log","TableHead","onClick","TableRow","TableCell","align","toString","TableBody","Collapse","in","Box","margin","NUSModuleCode","mapping","School","schoolName","alight","Country","countryName","sort","schl1","schl2","numMappableDiff","localeCompare","tmp","Continent","continentName","Results","continents","Selector","selectedEssentialModules","setSelectedEssentialModules","selectedOptionalModules","setSelectedOptionalModules","selectedContinents","setSelectedContinents","selectedCountries","setSelectedCountries","selectedSchools","setSelectedSchools","setResult","body","essential_modules","optional_modules","useEffect","fetch","method","headers","JSON","stringify","then","res","json","data","catch","err","App","Set","favourites","setFavourites","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e26b4389.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\n\r\n\r\nfunction Favourites(props) {\r\n\r\n    // REQUIRE LOGIC FOR SHOWING HOW TO HANDLE ELEMENTS IN props.favoruites\r\n\r\n    return (\r\n        <div>\r\n            Favourites\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Favourites","import React, { useState } from \"react\"\r\nimport './EssentialModuleSelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    }));\r\n\r\nconst modulesArr = require(\"../../data/reducedModules.json\")\r\nconst modules = []\r\nfor (var i = 0; i < modulesArr.length; i++) {\r\n    modules.push({module: modulesArr[i], modCode: modulesArr[i].split(\" \")[0]})\r\n}\r\n\r\nfunction EssentialModulesSelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickModule(event, val) {\r\n        props.stateSetter(val.map(mod => mod.modCode))\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Essential Modules</h2>\r\n            <div className={classes.root}>\r\n            <Autocomplete\r\n                autoHighlight={true}\r\n                onChange={onClickModule}\r\n                multiple\r\n                limitTags={2}\r\n                id=\"multiple-limit-tags\"\r\n                options={modules}\r\n                getOptionLabel={(options) => options.module}\r\n                defaultValue={[]}\r\n                renderInput={(params) => (\r\n                    <TextField {...params} variant=\"outlined\" label=\"Essential Modules\" placeholder=\"Continuous Typing Supported\" />\r\n                )}\r\n            />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default EssentialModulesSelector","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction NavBar(props) {\r\n\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/'>Selector</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/department'>Department</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/favourites'>Favourites</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React, { useState } from \"react\"\r\nimport './OptionalModuleSelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    }));\r\n\r\nconst modulesArr = require(\"../../data/reducedModules.json\")\r\nconst modules = []\r\nfor (var i = 0; i < modulesArr.length; i++) {\r\n    modules.push({module: modulesArr[i], modCode: modulesArr[i].split(\" \")[0]})\r\n}\r\n\r\nfunction OptionalModulesSelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickModule(event, val) {\r\n        props.stateSetter(val.map(mod => mod.modCode));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Optional Modules</h2>\r\n            <div className={classes.root}>\r\n                <Autocomplete\r\n                    autoHighlight={true}\r\n                    onChange={onClickModule}\r\n                    multiple\r\n                    limitTags={2}\r\n                    id=\"multiple-limit-tags\"\r\n                    options={modules}\r\n                    getOptionLabel={(options) => options.module}\r\n                    defaultValue={[]}\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} variant=\"outlined\" label=\"Optional Modules\" placeholder=\"Continuous Typing Supported\" />\r\n                    )}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default OptionalModulesSelector","import React, { useState } from \"react\"\r\n// import './SchoolSelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    }));\r\n\r\nconst schoolsArr = require(\"../../data/schools.json\")\r\nconst schools = []\r\nfor (var i = 0; i < schoolsArr.length; i++) {\r\n    schools.push({school: schoolsArr[i]})\r\n}\r\n\r\nfunction SchoolSelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickSchool(event, val) {\r\n        props.stateSetter(val.map(school => school.school))\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Schools</h2>\r\n            <div className={classes.root}>\r\n                <Autocomplete\r\n                    autoHighlight={true}\r\n                    onChange={onClickSchool}\r\n                    multiple\r\n                    limitTags={2}\r\n                    id=\"multiple-limit-tags\"\r\n                    options={schools}\r\n                    getOptionLabel={(option) => option.school}\r\n                    defaultValue={[]}\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} variant=\"outlined\" label=\"Schools\" placeholder=\"Continuous Typing Supported\" />\r\n                    )}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default SchoolSelector","import React, {useState} from \"react\"\r\nimport Multiselect from \"multiselect-react-dropdown\"\r\nimport * as Icon from \"react-icons/fi\"\r\nimport Checkbox from \"react-custom-checkbox\"\r\nimport nextId from 'react-id-generator'\r\n\r\n\r\nfunction ContinentSelector(props) {\r\n    const continents = [\r\n        {name: 'Africa', id: 1}, \r\n        {name: 'Asia', id: 2}, \r\n        {name: 'Europe', id: 3}, \r\n        {name: 'North America', id: 4}, \r\n        {name: 'Oceania', id: 5}, \r\n        {name: 'South America', id: 6}\r\n    ]\r\n    // const [selectedContinents, setSelectedContinents] = useState([])\r\n    const selectedContinents = []\r\n\r\n    function onClickContinentHandler(continent) {\r\n        props.stateSetter(prevState => {\r\n            if (prevState.includes(continent)) {\r\n                return prevState.filter(item => item != continent);\r\n            } else {\r\n                return [...prevState, continent];\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"ContinentSelector\">\r\n                <h3>Continents</h3>\r\n            </div>\r\n            {continents.map(continent => \r\n                <Checkbox\r\n                    key= {continent.id}\r\n                    onChange = {event => onClickContinentHandler(continent.name)}\r\n                    checked={false}\r\n                    icon={\r\n                        <div\r\n                            style={{\r\n                            display: \"flex\",\r\n                            flex: 1,\r\n                            backgroundColor: \"#174A41\",\r\n                            alignSelf: \"stretch\",\r\n                            }}\r\n                        >\r\n                            <Icon.FiCheck color=\"white\" size={20} />\r\n                        </div>\r\n                    }\r\n                    borderColor=\"#174A41\"\r\n                    borderWidth={0.000000000001}\r\n                    borderRadius={20}\r\n                    style={{ overflow: \"hidden\" }}\r\n                    size={20}\r\n                    label={continent.name}\r\n                />)}\r\n            {selectedContinents}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ContinentSelector","import React, { useState } from \"react\"\r\n// import './CountrySelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    }));\r\n\r\nconst countriesArr = require(\"../../data/countries.json\")\r\nconst countries = []\r\nfor (var i = 0; i < countriesArr.length; i++) {\r\n    countries.push({country: countriesArr[i]})\r\n}\r\n\r\nfunction CountrySelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickCountry(event, val) {\r\n        props.stateSetter(val.map(country => country.country))\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Countries</h2>\r\n            <div className={classes.root}>\r\n                <Autocomplete\r\n                autoHighlight={true}\r\n                onChange={onClickCountry}\r\n                multiple\r\n                limitTags={2}\r\n                id=\"multiple-limit-tags\"\r\n                options={countries}\r\n                getOptionLabel={(options) => options.country}\r\n                defaultValue={[]}\r\n                renderInput={(params) => (\r\n                    <TextField {...params} variant=\"outlined\" label=\"Countries\" placeholder=\"Continuous Typing Supported\" />\r\n                )}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default CountrySelector","import React, { useState } from \"react\"\r\nimport ModuleMapping from \"./university_components/ModuleMapping\"\r\n\r\nfunction University(props) {\r\n\r\n    const moduleMappings = new Array()\r\n\r\n    let i = 0\r\n    for (const module in props.mappings) {\r\n        moduleMappings[i] = <ModuleMapping module={module} equivalentModules={props.mappings[module]} />\r\n        i++\r\n    }\r\n\r\n\r\n    const [ notes, setNotes ] = useState(\"\")\r\n\r\n    return (\r\n        <div className=\"University\">\r\n            <p>\r\n                {props.name}, {props.numMappable}\r\n                {moduleMappings}\r\n                <input type=\"text\" onChange={event => setNotes(event.target.value)} value={notes} />\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default University","import React, { useState, useEffect } from \"react\"\r\nimport University from \"../University\"\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction ModuleMapping(props) {\r\n    const { moduleName, result } = props\r\n    // result = {\r\n    //     \"EquivalentNUSModule1\": [{\"PU Module Code\": \"PU123\", \"PU Module Title\": \"DUMMY NAME\"}, ...],\r\n    //     \"EquivalentNUSModule2\": [...],\r\n    // }\r\n\r\n    const [ open, setOpen ] = useState(true)\r\n    const equivalentNUSModules = []\r\n    let i = 0\r\n    for (const module in result) {\r\n        equivalentNUSModules[i] = module\r\n        i++;\r\n    }\r\n    console.log(equivalentNUSModules)\r\n\r\n    // THIS SHOULD BE CARD! TEMPORARY PLACEHOLDER\r\n    function createMapping(NUSModuleCode) {\r\n        const innerDisplay = mapping => \r\n            (<TableRow>\r\n                <TableCell>\r\n                    {mapping[\"PU Module Code\"]}\r\n                </TableCell>\r\n                <TableCell>\r\n                    {mapping[\"PU Module Title\"]}\r\n                </TableCell>\r\n            </TableRow>)\r\n        \r\n        if (equivalentNUSModules.length == 1) {\r\n            return (\r\n                <TableRow>\r\n                    <TableCell>\r\n                        {result[NUSModuleCode][0][\"PU Module Code\"]}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                        {result[NUSModuleCode][0][\"PU Module Title\"]}\r\n                    </TableCell>\r\n                </TableRow>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <TableRow>\r\n                <TableCell>\r\n                    <b>{NUSModuleCode}</b>\r\n                </TableCell>\r\n                <TableCell>\r\n                    {result[NUSModuleCode].map(innerDisplay)}\r\n                </TableCell> \r\n            </TableRow>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableHead onClick={() => setOpen(!open)}>\r\n                <TableRow>\r\n                    <TableCell align=\"left\">\r\n                        <p align=\"left\">{moduleName}</p>\r\n                        {equivalentNUSModules.length > 1\r\n                            ? \"equivalent to \" + equivalentNUSModules.toString()\r\n                            : \"\"\r\n                        }\r\n                    </TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableCell>\r\n                    <Collapse in={open}>\r\n                        <Box margin={1}>\r\n                            {equivalentNUSModules.map(createMapping)}\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableBody>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default ModuleMapping","import React, { useState, useEffect } from \"react\"\r\nimport University from \"../University\"\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ModuleMapping from \"./ModuleMapping\"\r\n\r\nfunction School(props) {\r\n    const { schoolName, result } = props\r\n    // result = {\"mappings\": {...}, \"num_mappable\": int}\r\n\r\n    const [ open, setOpen ] = useState(false)\r\n    const modules = []\r\n    let i = 0\r\n    for (const module in result[\"mappings\"]) {\r\n        modules[i] = module\r\n        i++;\r\n    }\r\n    console.log(result[\"mappings\"])\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableHead onClick={() => setOpen(!open)}>\r\n                <TableRow>\r\n                    <TableCell align=\"left\">{schoolName}</TableCell>\r\n                    <TableCell alight=\"right\">{result[\"num_mappable\"]} Modules mapped!</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableCell>\r\n                    <Collapse in={open}>\r\n                        <Box margin={1}>\r\n                            {modules.map(module => <ModuleMapping \r\n                                moduleName={module} \r\n                                result={result[\"mappings\"][module]}\r\n                            />)}\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableBody>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default School","import React, { useState, useEffect } from \"react\"\r\nimport University from \"../University\"\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport School from \"./School\"\r\n\r\nfunction Country(props) {\r\n    const { countryName, result } = props\r\n\r\n    const [ open, setOpen ] = useState(false)\r\n    let schools = []\r\n    let i = 0\r\n    for (const school in result) {\r\n        schools[i] = [school, result[school][\"num_mappable\"]]\r\n        i++;\r\n    }\r\n    console.log(result)\r\n\r\n    schools.sort((schl1, schl2) => {\r\n        const numMappableDiff = schl2[1] - schl1[1]\r\n        if (numMappableDiff != 0) {\r\n            return numMappableDiff\r\n        } else {\r\n            return schl1[0].localeCompare(schl2[0])\r\n        }\r\n    })\r\n\r\n    const tmp = []\r\n    for (let i = 0; i < schools.length; i++) {\r\n        tmp[i] = schools[i][0]\r\n    }\r\n    schools = tmp\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableHead onClick={() => setOpen(!open)}>\r\n                <TableRow>\r\n                    <TableCell>{countryName}</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableCell>\r\n                    <Collapse in={open}>\r\n                        <Box margin={1}>\r\n                            {schools.map(school => <School schoolName={school} result={result[school]} />)}\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableBody>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Country","import React, { useState, useEffect } from \"react\"\r\nimport University from \"../University\"\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Country from \"./Country\"\r\n\r\nfunction Continent(props) {\r\n    const { continentName, result } = props\r\n\r\n    const [ open, setOpen ] = useState(false)\r\n    const countries = []\r\n    let i = 0\r\n    for (const country in result) {\r\n        countries[i] = country\r\n        i++;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableHead onClick={() => setOpen(!open)}>\r\n                <TableRow>\r\n                    <TableCell>{continentName}</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableCell>\r\n                    <Collapse in={open}>\r\n                        <Box margin={1}>\r\n                            {countries.map(country => <Country countryName={country} result={result[country]}/>)}\r\n                            </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableBody>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Continent","import React, { useState, useEffect } from \"react\"\r\nimport University from \"../University\"\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Continent from \"./Continent\";\r\n\r\n/*\r\nTODO\r\n    1. Conditional rendering to show if only continent/country has been selected\r\n    2. Load selected options into props\r\n        2.1 Results will be our point of entry into our algorithm to select universities\r\n*/\r\n\r\nfunction Results(props) {\r\n\r\n    const { result } = props\r\n    const continents = []\r\n    let i = 0\r\n    for (const continent in result) {\r\n        console.log(continent)\r\n        continents[i] = continent\r\n        i++\r\n    }\r\n\r\n    const [ open, setOpen ] = useState(false)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {continents.map(continent => <Continent continentName={continent} result={result[continent]}/>)}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Results","import React, { useState, useEffect } from \"react\"\r\nimport EssentialModulesSelector from \"../components/selector_components/EssentialModuleSelector\"\r\nimport OptionalModulesSelector from \"../components/selector_components/OptionalModuleSelector\"\r\nimport ContinentSelector from \"../components/selector_components/ContinentSelector\"\r\nimport SchoolSelector from \"../components/selector_components/SchoolSelector\"\r\nimport CountrySelector from \"../components/selector_components/CountrySelector\"\r\nimport Results from \"../components/selector_components/Results\"\r\n\r\nimport { Collapse, Table, TableCell } from '@material-ui/core'\r\n\r\n\r\nfunction Selector(props) {\r\n\r\n    // const [essentialModules, setEssentialModules] = useState(new Set())\r\n    // const [optionalModules, setOptionalModules] = useState(new Set())\r\n    // const [continents, setContinents] = useState(new Set())\r\n    // const [countries, setCountries] = useState(new Set())\r\n    // const [schools, setSchools] = useState(new Set())\r\n\r\n    const [selectedEssentialModules, setSelectedEssentialModules] = useState([])\r\n    const [selectedOptionalModules, setSelectedOptionalModules] = useState([])\r\n    const [selectedContinents, setSelectedContinents] = useState([])\r\n    const [selectedCountries, setSelectedCountries] = useState([])\r\n    const [selectedSchools, setSelectedSchools] = useState([])\r\n\r\n    const [result, setResult] = useState({});\r\n    const body = {\r\n        essential_modules: selectedEssentialModules,\r\n        optional_modules: selectedOptionalModules,\r\n        schools: selectedSchools,\r\n        countries: selectedCountries,\r\n        continents: selectedContinents\r\n      }\r\n    useEffect(() => {\r\n      fetch('http://127.0.0.1:5000/backend', {\r\n          method: \"POST\",\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n      }).then(res => res.json())\r\n        .then(data => setResult(data))\r\n        .catch(err => console.log(err))\r\n    }, [selectedEssentialModules, selectedOptionalModules, selectedContinents, selectedCountries, selectedSchools])\r\n\r\n    return (\r\n        <div className=\"Selector\">\r\n          \r\n\r\n\r\n\r\n            <h2>Delete these arrays later</h2>\r\n            <strong>EM:</strong>{selectedEssentialModules} <br/>\r\n            <strong>OM:</strong>{selectedOptionalModules} <br/> \r\n            <strong>Countries:</strong>{selectedCountries} <br/>\r\n            <strong>Schools:</strong>{selectedSchools} <br/>\r\n            <strong>Continents:</strong>{selectedContinents} <br/>\r\n     \r\n            <h1>Selector</h1>\r\n            <EssentialModulesSelector stateSetter={setSelectedEssentialModules}/>\r\n            <OptionalModulesSelector stateSetter={setSelectedOptionalModules}/>\r\n            <ContinentSelector stateSetter={setSelectedContinents}/>\r\n            <CountrySelector stateSetter={setSelectedCountries}/>\r\n            <SchoolSelector stateSetter={setSelectedSchools}/>\r\n            <Results result={result}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Selector","import React, { Component, useState } from \"react\"\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Favourites from \"./pages/Favourites\"\r\nimport NavBar from \"./components/NavBar\"\r\nimport Selector from \"./pages/Selector\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nfunction App() {\r\n\r\n    const [ page, setPage ] = useState(\"Selector\")\r\n\r\n    // favourites should be a set of strings, where each element is \"uni_name, MOD1, MOD2, ..., MODn\"\r\n    // modules must be in sorted order\r\n    const [ favourites, setFavourites ] = useState(new Set())\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <Route path=\"/\" exact>\r\n                <Selector \r\n                    favourites={favourites}\r\n                    setFavourites={setFavourites}\r\n                /> \r\n            </Route>\r\n            <Route path =\"/department\" exact>\r\n                \r\n            </Route>\r\n            <Route path=\"/favourites\" exact>\r\n                <Favourites\r\n                    favourites={favourites}\r\n                    setFavourites={setFavourites}\r\n                />\r\n            </Route>\r\n            {/* {page === \"Selector\" \r\n                ? <Selector \r\n                    favourites={favourites}\r\n                    setFavourites={setFavourites}\r\n                    /> \r\n                : page === \"Favourites\"\r\n                ? <Favourites\r\n                    favourites={favourites}\r\n                    setFavourites={setFavourites}/>\r\n                : page === \"Department\"\r\n                ? null\r\n                : null\r\n            } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}