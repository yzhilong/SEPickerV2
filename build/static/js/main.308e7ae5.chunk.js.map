{"version":3,"sources":["components/selector_components/ModuleMapping.js","components/selector_components/School.js","pages/Favourites.js","components/selector_components/EssentialModuleSelector.js","components/NavBar.js","components/selector_components/OptionalModuleSelector.js","components/selector_components/SchoolSelector.js","components/selector_components/ContinentSelector.js","components/selector_components/CountrySelector.js","components/selector_components/Country.js","components/selector_components/Results.js","pages/Selector.js","App.js","reportWebVitals.js","index.js"],"names":["ModuleMapping","props","moduleName","result","useStyles","modulesCodeTitleMappings","equivalentNUSModules","i","module","getMapping","moduleCode","Grid","container","xs","spacing","item","alignItems","Box","textAlign","fontWeight","equivModule","map","mod","Fragment","Typography","length","style","border","justifyContent","fontSize","School","schoolName","toString","Object","keys","mappings","join","useState","defaultNote","localStorage","getItem","notes","setNotes","modules","classes","AccordionDetails","Accordion","className","innerRoot","AccordionSummary","expandIcon","id","onClick","event","stopPropagation","cookieName","setItem","alignContent","TextField","label","multiline","maxRows","value","onChange","target","Favourites","schools","NavBar","to","makeStyles","theme","root","width","marginTop","modulesArr","require","push","modCode","split","EssentialModulesSelector","Autocomplete","autoHighlight","val","stateSetter","multiple","limitTags","options","getOptionLabel","defaultValue","renderInput","params","variant","placeholder","OptionalModulesSelector","ContinentSelector","continents","name","onClickContinentHandler","continent","prevState","includes","filter","FormGroup","row","slice","FormControlLabel","control","Checkbox","checked","state","schoolsArr","school","SchoolSelector","option","countriesArr","countries","country","CountrySelector","Country","countryName","sort","schl1","schl2","numMappableDiff","localeCompare","tmp","column","minWidth","heading","typography","pxToRem","secondaryHeading","color","palette","text","secondary","icon","verticalAlign","height","details","flexBasis","helper","borderLeft","divider","padding","link","primary","main","textDecoration","Results","countryDetails","countryA","countryB","countryDetail","Selector","selectedEssentialModules","setSelectedEssentialModules","selectedOptionalModules","setSelectedOptionalModules","selectedContinents","setSelectedContinents","selectedCountries","setSelectedCountries","selectedSchools","setSelectedSchools","setResult","body","essential_modules","optional_modules","useEffect","fetch","method","headers","JSON","stringify","then","res","json","data","catch","err","console","log","lg","App","Set","favourites","setFavourites","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.308e7ae5.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Table, TableRow, TableCell, TableHead, Box, Grid } from \"@material-ui/core\";\r\n\r\nfunction ModuleMapping(props) {\r\n    const { moduleName, result, useStyles, modulesCodeTitleMappings } = props\r\n    const moduleTitle = modulesCodeTitleMappings[moduleName]\r\n    // result = {\r\n    //     \"EquivalentNUSModule1\": [{\"PU Module Code\": \"PU123\", \"PU Module Title\": \"DUMMY NAME\"}, ...],\r\n    //     \"EquivalentNUSModule2\": [...],\r\n    // }\r\n\r\n    const equivalentNUSModules = []\r\n    let i = 0\r\n    for (const module in result) {\r\n        equivalentNUSModules[i] = module\r\n        i++;\r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n    function getPUModules(equivModule) {\r\n        return result[equivModule].map(mod => {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Typography>\r\n                            <Box textAlign=\"left\" fontWeight=\"fontWeightBold\">\r\n                                {mod[\"PU Module Code\"]}\r\n                            </Box>\r\n                            <Box textAlign=\"left\">\r\n                                {mod[\"PU Module Title\"]}\r\n                            </Box>\r\n                        </Typography>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        )\r\n    }\r\n\r\n    function getMapping(moduleCode) {\r\n        return (\r\n\r\n            <Grid container xs={12} spacing={3}>\r\n                <Grid item container xs={6} alignItems=\"center\">\r\n                    <Grid item>\r\n                        <Box textAlign=\"left\" fontWeight=\"fontWeightBold\">\r\n                            {moduleCode}\r\n                        </Box>\r\n                        <Box textAlign=\"left\">\r\n                            {modulesCodeTitleMappings[moduleCode]}\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                    {getPUModules(moduleCode)}\r\n                </Grid>\r\n\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    if (equivalentNUSModules.length == 1 && equivalentNUSModules[0] === moduleName) {\r\n        return <div style={{border: \"1px solid black\"}}>{getMapping(equivalentNUSModules[0])}</div>\r\n    }\r\n\r\n    return (\r\n        <div style={{border: \"1px solid black\"}}>\r\n        <Grid container xs={12} spacing={0} justifyContent=\"center\">\r\n            <Grid item xs={12}>\r\n                <Typography style={{fontSize: \"12px\"}}>Module(s) equivalent to {moduleName}</Typography>\r\n            </Grid>\r\n            {equivalentNUSModules.map(mod => {\r\n                return (\r\n                    <Grid item xs={12}>\r\n                        {getMapping(mod)}\r\n                    </Grid>\r\n                )\r\n            })}\r\n        </Grid>\r\n        </div>  \r\n    )\r\n\r\n    // if (equivalentNUSModules.length == 1) {\r\n    //     return (\r\n    //         <TableRow>\r\n    //             <TableCell>\r\n    //                 <Typography>{moduleName}</Typography>\r\n    //                 <Typography>{moduleTitle}</Typography>\r\n    //             </TableCell>\r\n    //             <TableCell>\r\n    //                 {getPUMap(equivalentNUSModules[0])}\r\n    //             </TableCell>\r\n    //         </TableRow>\r\n    //         )\r\n    // } else {\r\n    //     return (\r\n    //         <React.Fragment>\r\n    //             <TableHead>\r\n    //                 <TableCell>\r\n    //                     <Typography>Modules equivalent to {moduleName}</Typography>\r\n    //                 </TableCell>\r\n    //             </TableHead>\r\n    //             {equivalentNUSModules.map(mod => { return (\r\n    //                 <TableHead>\r\n    //                     <TableCell>\r\n    //                         <Typography>{mod}</Typography>\r\n    //                         <Typography>{moduleTitle}</Typography>\r\n    //                     </TableCell>\r\n    //                     <TableCell>\r\n    //                         {getPUMap(mod)}\r\n    //                     </TableCell>\r\n    //                 </TableHead>)\r\n    //             })}\r\n    //         </React.Fragment>\r\n    //     )\r\n    // }\r\n    // // THIS SHOULD BE CARD! TEMPORARY PLACEHOLDER\r\n    // function createMapping(NUSModuleCode) {\r\n    //     const innerDisplay = mapping => \r\n    //         (<TableRow>\r\n    //             <TableCell>\r\n    //                 {mapping[\"PU Module Code\"]}\r\n    //             </TableCell>\r\n    //             <TableCell>\r\n    //                 {mapping[\"PU Module Title\"]}\r\n    //             </TableCell>\r\n    //         </TableRow>)\r\n        \r\n    //     if (equivalentNUSModules.length == 1) {\r\n    //         return (\r\n    //             <TableRow>\r\n    //                 <TableCell>\r\n    //                     {result[NUSModuleCode][0][\"PU Module Code\"]}\r\n    //                 </TableCell>\r\n    //                 <TableCell>\r\n    //                     {result[NUSModuleCode][0][\"PU Module Title\"]}\r\n    //                 </TableCell>\r\n    //             </TableRow>\r\n    //         )\r\n    //     }\r\n\r\n\r\n    //     return (\r\n    //         <TableRow>\r\n    //             <TableCell>\r\n    //                 <b>{NUSModuleCode}</b>\r\n    //             </TableCell>\r\n    //             <TableCell>\r\n    //                 {result[NUSModuleCode].map(innerDisplay)}\r\n    //             </TableCell> \r\n    //         </TableRow>\r\n    //     )\r\n    // }\r\n\r\n\r\n\r\n    // return (\r\n    //     <React.Fragment>\r\n    //         <TableHead onClick={() => setOpen(!open)}>\r\n    //             <TableRow>\r\n    //                 <TableCell align=\"left\">\r\n    //                     <p align=\"left\">{moduleName}</p>\r\n    //                     {equivalentNUSModules.length > 1\r\n    //                         ? \"equivalent to \" + equivalentNUSModules.toString()\r\n    //                         : \"\"\r\n    //                     }\r\n    //                 </TableCell>\r\n    //             </TableRow>\r\n    //         </TableHead>\r\n    //         <TableBody>\r\n    //             <TableCell>\r\n    //                 <Collapse in={open}>\r\n    //                     <Box margin={1}>\r\n    //                         {equivalentNUSModules.map(createMapping)}\r\n    //                     </Box>\r\n    //                 </Collapse>\r\n    //             </TableCell>\r\n    //         </TableBody>\r\n    //     </React.Fragment>\r\n    // )\r\n\r\n}\r\n\r\nexport default ModuleMapping","import React, { useState, useEffect } from \"react\"\r\nimport ModuleMapping from \"./ModuleMapping\"\r\n\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Table from \"@material-ui/core/Table\"\r\nimport { TableHead, TableRow, TableCell, TableContainer, Paper, TextField, Grid } from \"@material-ui/core\";\r\n\r\nfunction School(props) {\r\n    const { schoolName, result, useStyles, modulesCodeTitleMappings } = props\r\n    // result = {\"mappings\": {...}, \"num_mappable\": int}\r\n\r\n    function toString() {\r\n        return schoolName + Object.keys(result.mappings).join();\r\n    }\r\n\r\n    const [ open, setOpen ] = useState(false)\r\n\r\n    const defaultNote = (toString() in localStorage) ? localStorage.getItem(toString()) : \"\"\r\n    // console.log(toString() in localStorage)\r\n    const [ notes, setNotes ] = useState(defaultNote)\r\n\r\n    const modules = []\r\n    let i = 0\r\n    for (const module in result[\"mappings\"]) {\r\n        modules[i] = module\r\n        i++;\r\n    }\r\n\r\n    function onFavHandler(event) {\r\n        event.stopPropagation();\r\n        const cookieName = toString()\r\n        if (cookieName in localStorage) {\r\n            // const existing = JSON.parse(localStorage.getItem(cookieName))\r\n            localStorage.setItem(cookieName, notes)\r\n        } else {\r\n            localStorage.setItem(cookieName, notes);\r\n        }\r\n    }\r\n\r\n    const classes = useStyles(); \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AccordionDetails>\r\n                <Accordion className={classes.innerRoot}>\r\n                    <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                    >\r\n                        <div>\r\n                            <Typography>{schoolName}</Typography>\r\n                            <button onClick={onFavHandler}>button</button>\r\n                            <Typography>{result['num_mappable']} module(s) available!</Typography>\r\n                        </div>\r\n                    </AccordionSummary>\r\n\r\n                    <Grid container spacing={0} justifyContent=\"center\" alignContent=\"center\">\r\n                        <Grid item xs={6}>\r\n                            <div style={{border: \"solid 1px blue\"}}>NUS Module</div>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <div style={{border: \"solid 1px blue\"}}>Partner University Module</div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {modules.map(module => <ModuleMapping \r\n                                        moduleName={module} \r\n                                        result={result[\"mappings\"][module]} \r\n                                        useStyles={useStyles}\r\n                                        modulesCodeTitleMappings={modulesCodeTitleMappings}/>)}\r\n                    <TextField \r\n                        label=\"Notes\" \r\n                        multiline={true}\r\n                        className={classes.innerRoot}\r\n                        maxRows={6}\r\n                        value={notes}\r\n                        onChange={event => {\r\n                            setNotes(event.target.value)\r\n                            localStorage.setItem(toString(), event.target.value)\r\n                        }}\r\n                        />\r\n                </Accordion>\r\n            </AccordionDetails>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default School","import React, { useState } from \"react\"\r\nimport School from \"../components/selector_components/School\"\r\n\r\nfunction Favourites(props) {\r\n\r\n    // REQUIRE LOGIC FOR SHOWING HOW TO HANDLE ELEMENTS IN props.favoruites\r\n    const schools = localStorage.getItem(\"fav\");\r\n    return (\r\n        <div>\r\n            {schools}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Favourites","import React, { useState } from \"react\"\r\nimport './EssentialModuleSelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    }));\r\n\r\nconst modulesArr = require(\"../../data/reducedModules.json\")\r\nconst modules = []\r\nfor (var i = 0; i < modulesArr.length; i++) {\r\n    modules.push({module: modulesArr[i], modCode: modulesArr[i].split(\" \")[0]})\r\n}\r\n\r\nfunction EssentialModulesSelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickModule(event, val) {\r\n        props.stateSetter(val.map(mod => mod.modCode))\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Essential Modules</h2>\r\n            <div className={classes.root}>\r\n            <Autocomplete\r\n                autoHighlight={true}\r\n                onChange={onClickModule}\r\n                multiple\r\n                limitTags={2}\r\n                id=\"multiple-limit-tags\"\r\n                options={modules}\r\n                getOptionLabel={(options) => options.module}\r\n                defaultValue={[]}\r\n                renderInput={(params) => (\r\n                    <TextField {...params} variant=\"outlined\" label=\"Essential Modules\" placeholder=\"Continuous Typing Supported\" />\r\n                )}\r\n            />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default EssentialModulesSelector","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction NavBar(props) {\r\n\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/'>Selector</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/department'>Department</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/favourites'>Favourites</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React, { useState } from \"react\"\r\nimport './OptionalModuleSelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    }));\r\n\r\nconst modulesArr = require(\"../../data/reducedModules.json\")\r\nconst modules = []\r\nfor (var i = 0; i < modulesArr.length; i++) {\r\n    modules.push({module: modulesArr[i], modCode: modulesArr[i].split(\" \")[0]})\r\n}\r\n\r\nfunction OptionalModulesSelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickModule(event, val) {\r\n        props.stateSetter(val.map(mod => mod.modCode));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Optional Modules</h2>\r\n            <div className={classes.root}>\r\n                <Autocomplete\r\n                    autoHighlight={true}\r\n                    onChange={onClickModule}\r\n                    multiple\r\n                    limitTags={2}\r\n                    id=\"multiple-limit-tags\"\r\n                    options={modules}\r\n                    getOptionLabel={(options) => options.module}\r\n                    defaultValue={[]}\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} variant=\"outlined\" label=\"Optional Modules\" placeholder=\"Continuous Typing Supported\" />\r\n                    )}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default OptionalModulesSelector","import React, { useState } from \"react\"\r\n// import './SchoolSelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    }));\r\n\r\nconst schoolsArr = require(\"../../data/schools.json\")\r\nconst schools = []\r\nfor (var i = 0; i < schoolsArr.length; i++) {\r\n    schools.push({school: schoolsArr[i]})\r\n}\r\n\r\nfunction SchoolSelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickSchool(event, val) {\r\n        props.stateSetter(val.map(school => school.school))\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Schools</h2>\r\n            <div className={classes.root}>\r\n                <Autocomplete\r\n                    autoHighlight={true}\r\n                    onChange={onClickSchool}\r\n                    multiple\r\n                    limitTags={2}\r\n                    id=\"multiple-limit-tags\"\r\n                    options={schools}\r\n                    getOptionLabel={(option) => option.school}\r\n                    defaultValue={[]}\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} variant=\"outlined\" label=\"Schools\" placeholder=\"Continuous Typing Supported\" />\r\n                    )}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default SchoolSelector","import React, {useState} from \"react\"\r\nimport Multiselect from \"multiselect-react-dropdown\"\r\nimport * as Icon from \"react-icons/fi\"\r\n// import Checkbox from \"react-custom-checkbox\"\r\nimport nextId from 'react-id-generator'\r\nimport { FormGroup, FormControlLabel, Checkbox } from '@material-ui/core'\r\n\r\n\r\nfunction ContinentSelector(props) {\r\n    const continents = [\r\n        {name: 'Africa', id: 1}, \r\n        {name: 'Asia', id: 2}, \r\n        {name: 'Europe', id: 3}, \r\n        {name: 'North America', id: 4}, \r\n        {name: 'Oceania', id: 5}, \r\n        {name: 'South America', id: 6}\r\n    ]\r\n    // const [selectedContinents, setSelectedContinents] = useState([])\r\n    const selectedContinents = []\r\n\r\n    function onClickContinentHandler(continent) {\r\n        props.stateSetter(prevState => {\r\n            if (prevState.includes(continent)) {\r\n                return prevState.filter(item => item != continent);\r\n            } else {\r\n                return [...prevState, continent];\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <FormGroup row='true'>\r\n                {continents.slice(0, 3).map(continent =>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={props.state.includes(continent.name)} onChange={(event)=>(onClickContinentHandler(event.target.name))} name={continent.name} />}\r\n                        label={continent.name}\r\n                    />\r\n                )}\r\n            </FormGroup>\r\n            <FormGroup row='true'>\r\n                {continents.slice(3, 6).map(continent =>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={props.state.includes(continent.name)} onChange={(event)=>(onClickContinentHandler(event.target.name))} name={continent.name} />}\r\n                        label={continent.name}\r\n                    />\r\n                )}\r\n            </FormGroup>\r\n        </React.Fragment>\r\n        // <React.Fragment>\r\n        //     <div className=\"ContinentSelector\">\r\n        //         <h3>Continents</h3>\r\n        //     </div>\r\n        //     {continents.map(continent => \r\n        //         <Checkbox\r\n        //             key= {continent.id}\r\n        //             onChange = {event => onClickContinentHandler(continent.name)}\r\n        //             checked={false}\r\n        //             icon={\r\n        //                 <div\r\n        //                     style={{\r\n        //                     display: \"flex\",\r\n        //                     flex: 1,\r\n        //                     backgroundColor: \"#174A41\",\r\n        //                     alignSelf: \"stretch\",\r\n        //                     }}\r\n        //                 >\r\n        //                     <Icon.FiCheck color=\"white\" size={20} />\r\n        //                 </div>\r\n        //             }\r\n        //             borderColor=\"#174A41\"\r\n        //             borderWidth={0.000000000001}\r\n        //             borderRadius={20}\r\n        //             style={{ overflow: \"hidden\" }}\r\n        //             size={20}\r\n        //             label={continent.name}\r\n        //         />)}\r\n        //     {selectedContinents}\r\n        // </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ContinentSelector","import React, { useState } from \"react\"\r\n// import './CountrySelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    }));\r\n\r\nconst countriesArr = require(\"../../data/countries.json\")\r\nconst countries = []\r\nfor (var i = 0; i < countriesArr.length; i++) {\r\n    countries.push({country: countriesArr[i]})\r\n}\r\n\r\nfunction CountrySelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickCountry(event, val) {\r\n        props.stateSetter(val.map(country => country.country))\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Countries</h2>\r\n            <div className={classes.root}>\r\n                <Autocomplete\r\n                autoHighlight={true}\r\n                onChange={onClickCountry}\r\n                multiple\r\n                limitTags={2}\r\n                id=\"multiple-limit-tags\"\r\n                options={countries}\r\n                getOptionLabel={(options) => options.country}\r\n                defaultValue={[]}\r\n                renderInput={(params) => (\r\n                    <TextField {...params} variant=\"outlined\" label=\"Countries\" placeholder=\"Continuous Typing Supported\" />\r\n                )}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default CountrySelector","import React, { useState, useEffect } from \"react\"\r\nimport University from \"../University\"\r\nimport School from \"./School\"\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nfunction Country(props) {\r\n    const { countryName, result, useStyles, modulesCodeTitleMappings } = props\r\n\r\n    const [ open, setOpen ] = useState(false)\r\n    let schools = []\r\n    let i = 0\r\n    for (const school in result) {\r\n        schools[i] = [school, result[school][\"num_mappable\"]]\r\n        i++;\r\n    }\r\n\r\n    schools.sort((schl1, schl2) => {\r\n        const numMappableDiff = schl2[1] - schl1[1]\r\n        if (numMappableDiff != 0) {\r\n            return numMappableDiff\r\n        } else {\r\n            return schl1[0].localeCompare(schl2[0])\r\n        }\r\n    })\r\n\r\n    const tmp = []\r\n    for (let i = 0; i < schools.length; i++) {\r\n        tmp[i] = schools[i][0]\r\n    }\r\n    schools = tmp\r\n\r\n    const classes = useStyles();\r\n      \r\n\r\n    return (\r\n        <Accordion className={classes.root}>\r\n            <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n            >\r\n                <div className={classes.column}>\r\n                    <Typography>{countryName}</Typography>\r\n                    <Typography>{schools.length} school(s) available!</Typography>\r\n                </div>\r\n            </AccordionSummary>\r\n                {schools.map(school => {return (\r\n                        // <AccordionDetails className={classes.root}>\r\n                            <School \r\n                                schoolName={school} \r\n                                result={result[school]} \r\n                                useStyles={useStyles}\r\n                                modulesCodeTitleMappings={modulesCodeTitleMappings}/>\r\n                        // </AccordionDetails>\r\n                    )})}\r\n        </Accordion>\r\n    )\r\n\r\n}\r\n\r\nexport default Country","import React, { useState, useEffect } from \"react\"\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport Country from \"./Country\"\r\n\r\n/*\r\nTODO\r\n    1. Conditional rendering to show if only continent/country has been selected\r\n    2. Load selected options into props\r\n        2.1 Results will be our point of entry into our algorithm to select universities\r\n*/\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '80%',\r\n        minWidth: 500,\r\n    },\r\n    innerRoot: {\r\n        width: \"100%\",\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    icon: {\r\n        verticalAlign: 'bottom',\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    details: {\r\n        alignItems: 'center',\r\n    },\r\n    column: {\r\n        flexBasis: '33.33%',\r\n        width: '100%'\r\n    },\r\n    helper: {\r\n        borderLeft: `2px solid ${theme.palette.divider}`,\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n        textDecoration: 'underline',\r\n        },\r\n    },\r\n    }));\r\n\r\nconst modulesCodeTitleMappings = require(\"../../data/moduleCodeTitleMappings.json\")\r\n\r\nfunction Results(props) {\r\n\r\n    const { result } = props\r\n    const countryDetails = []\r\n    let i = 0\r\n    for (const continent in result) {\r\n        for (const country in result[continent]) {\r\n            countryDetails[i] = {\"countryName\": country, \"result\": result[continent][country]}\r\n            i++\r\n        }\r\n    }\r\n\r\n    // Display countries in lexicographical order\r\n    countryDetails.sort((countryA, countryB) => countryA[\"countryName\"].localeCompare(countryB[\"countryName\"]))\r\n\r\n    \r\n    return countryDetails.map(countryDetail => <Country \r\n            countryName={countryDetail[\"countryName\"]} \r\n            result={countryDetail[\"result\"] } \r\n            useStyles={useStyles}\r\n            modulesCodeTitleMappings={modulesCodeTitleMappings}/>)\r\n}\r\n\r\nexport default Results","import React, { useState, useEffect } from \"react\"\r\nimport EssentialModulesSelector from \"../components/selector_components/EssentialModuleSelector\"\r\nimport OptionalModulesSelector from \"../components/selector_components/OptionalModuleSelector\"\r\nimport ContinentSelector from \"../components/selector_components/ContinentSelector\"\r\nimport SchoolSelector from \"../components/selector_components/SchoolSelector\"\r\nimport CountrySelector from \"../components/selector_components/CountrySelector\"\r\nimport Results from \"../components/selector_components/Results\"\r\n\r\nimport { Collapse, Table, TableCell, Paper, Grid, Card, Typography } from '@material-ui/core'\r\nimport { sizing } from '@material-ui/system';\r\n\r\nimport './Selector.css'\r\n\r\nfunction Selector(props) {\r\n\r\n    // const [essentialModules, setEssentialModules] = useState(new Set())\r\n    // const [optionalModules, setOptionalModules] = useState(new Set())\r\n    // const [continents, setContinents] = useState(new Set())\r\n    // const [countries, setCountries] = useState(new Set())\r\n    // const [schools, setSchools] = useState(new Set())\r\n\r\n    const [selectedEssentialModules, setSelectedEssentialModules] = useState([])\r\n    const [selectedOptionalModules, setSelectedOptionalModules] = useState([])\r\n    const [selectedContinents, setSelectedContinents] = useState([])\r\n    const [selectedCountries, setSelectedCountries] = useState([])\r\n    const [selectedSchools, setSelectedSchools] = useState([])\r\n\r\n    const [result, setResult] = useState({});\r\n    const body = {\r\n        essential_modules: selectedEssentialModules,\r\n        optional_modules: selectedOptionalModules,\r\n        schools: selectedSchools,\r\n        countries: selectedCountries,\r\n        continents: selectedContinents\r\n      }\r\n    useEffect(() => {\r\n      fetch('http://127.0.0.1:5000/backend', {\r\n          method: \"POST\",\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n      }).then(res => res.json())\r\n        .then(data => setResult(data))\r\n        .catch(err => console.log(err))\r\n    }, [selectedEssentialModules, selectedOptionalModules, selectedContinents, selectedCountries, selectedSchools])\r\n\r\n    return (\r\n        <div className=\"Selector\">\r\n            {/* <h2>Delete these arrays later</h2>\r\n            <strong>EM:</strong>{selectedEssentialModules} <br/>\r\n            <strong>OM:</strong>{selectedOptionalModules} <br/> \r\n            <strong>Countries:</strong>{selectedCountries} <br/>\r\n            <strong>Schools:</strong>{selectedSchools} <br/>\r\n            <strong>Continents:</strong>{selectedContinents} <br/> */}\r\n            {/* <div class=\"wrap\"> */}\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} lg={6}>\r\n                <div id=\"left-box\">\r\n                  <h1>Selector</h1>\r\n                  <EssentialModulesSelector stateSetter={setSelectedEssentialModules}/>\r\n                  <OptionalModulesSelector stateSetter={setSelectedOptionalModules}/>\r\n                  <ContinentSelector stateSetter={setSelectedContinents} state={selectedContinents}/>\r\n                  <CountrySelector stateSetter={setSelectedCountries}/>\r\n                  <SchoolSelector stateSetter={setSelectedSchools}/>\r\n                </div>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} lg={6} style={{height:\"100vh\"}}>\r\n                    <h1>Results</h1>\r\n                    {Object.keys(result).length == 0 \r\n                      && <h2>No Module Selected Yet</h2>}\r\n                    <Results result={result}/>\r\n              </Grid>\r\n\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Selector","import React, { Component, useState } from \"react\"\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Favourites from \"./pages/Favourites\"\r\nimport NavBar from \"./components/NavBar\"\r\nimport Selector from \"./pages/Selector\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nfunction App() {\r\n\r\n    const [ page, setPage ] = useState(\"Selector\")\r\n\r\n    // favourites should be a set of strings, where each element is \"uni_name, MOD1, MOD2, ..., MODn\"\r\n    // modules must be in sorted order\r\n    const [ favourites, setFavourites ] = useState(new Set())\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <Route path=\"/\" exact>\r\n                <Selector \r\n                    favourites={favourites}\r\n                    setFavourites={setFavourites}\r\n                /> \r\n            </Route>\r\n            <Route path =\"/department\" exact>\r\n                \r\n            </Route>\r\n            <Route path=\"/favourites\" exact>\r\n                <Favourites\r\n                    favourites={favourites}\r\n                    setFavourites={setFavourites}\r\n                />\r\n            </Route>\r\n            {/* {page === \"Selector\" \r\n                ? <Selector \r\n                    favourites={favourites}\r\n                    setFavourites={setFavourites}\r\n                    /> \r\n                : page === \"Favourites\"\r\n                ? <Favourites\r\n                    favourites={favourites}\r\n                    setFavourites={setFavourites}/>\r\n                : page === \"Department\"\r\n                ? null\r\n                : null\r\n            } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}