{"version":3,"sources":["pages/Favourites.js","components/selector_components/EssentialModuleSelector.js","components/NavBar.js","components/selector_components/OptionalModuleSelector.js","components/selector_components/SchoolSelector.js","components/selector_components/ContinentSelector.js","components/selector_components/CountrySelector.js","components/university_components/ModuleMapping.js","components/University.js","components/selector_components/Results.js","pages/Selector.js","App.js","reportWebVitals.js","index.js"],"names":["Favourites","props","NavBar","to","useStyles","makeStyles","theme","root","width","marginTop","spacing","modulesArr","require","modules","i","length","push","module","modCode","split","EssentialModulesSelector","classes","Fragment","className","Autocomplete","autoHighlight","onChange","event","val","stateSetter","map","mod","multiple","limitTags","id","options","getOptionLabel","defaultValue","renderInput","params","TextField","variant","label","placeholder","OptionalModulesSelector","ContinentSelector","name","continent","prevState","includes","filter","item","onClickContinentHandler","checked","icon","style","display","flex","backgroundColor","alignSelf","color","size","borderColor","borderWidth","borderRadius","overflow","schoolsArr","schools","school","SchoolSelector","option","countriesArr","countries","country","CountrySelector","ModuleMapping","equivalentModules","numEquivalentModules","console","log","output","equivalentModule","JSON","stringify","equivs","tail","head","slice","moduleCode","University","moduleMappings","Array","mappings","useState","notes","setNotes","numMappable","type","target","value","Results","result","universities","Selector","selectedEssentialModules","setSelectedEssentialModules","selectedOptionalModules","setSelectedOptionalModules","selectedContinents","setSelectedContinents","selectedCountries","setSelectedCountries","selectedSchools","setSelectedSchools","setResult","body","essential_modules","optional_modules","continents","useEffect","fetch","method","headers","then","res","json","data","catch","err","App","Set","favourites","setFavourites","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.152073b7.chunk.js","sourcesContent":["import React, { useState } from \"react\"\n\n\nfunction Favourites(props) {\n\n    // REQUIRE LOGIC FOR SHOWING HOW TO HANDLE ELEMENTS IN props.favoruites\n\n    return (\n        <div>\n            Favourites\n        </div>\n    )\n    \n}\n\nexport default Favourites","import React, { useState } from \"react\"\nimport './EssentialModuleSelector.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 500,\n        '& > * + *': {\n        marginTop: theme.spacing(3),\n        },\n    },\n    }));\n\nconst modulesArr = require(\"../../data/reducedModules.json\")\nconst modules = []\nfor (var i = 0; i < modulesArr.length; i++) {\n    modules.push({module: modulesArr[i], modCode: modulesArr[i].split(\" \")[0]})\n}\n\nfunction EssentialModulesSelector(props) {\n\n    const classes = useStyles();\n    function onClickModule(event, val) {\n        props.stateSetter(val.map(mod => mod.modCode))\n    }\n\n    return (\n        <React.Fragment>\n            <h2>Essential Modules</h2>\n            <div className={classes.root}>\n            <Autocomplete\n                autoHighlight={true}\n                onChange={onClickModule}\n                multiple\n                limitTags={2}\n                id=\"multiple-limit-tags\"\n                options={modules}\n                getOptionLabel={(options) => options.module}\n                defaultValue={[]}\n                renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" label=\"Essential Modules\" placeholder=\"Continuous Typing Supported\" />\n                )}\n            />\n            </div>\n        </React.Fragment>\n    );\n\n      \n}\n\nexport default EssentialModulesSelector","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nfunction NavBar(props) {\n\n    return (\n        <header>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to='/'>Selector</Link>\n                    </li>\n                    <li>\n                        <Link to='/department'>Department</Link>\n                    </li>\n                    <li>\n                        <Link to='/favourites'>Favourites</Link>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default NavBar","import React, { useState } from \"react\"\nimport './OptionalModuleSelector.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 500,\n        '& > * + *': {\n        marginTop: theme.spacing(3),\n        },\n    },\n    }));\n\nconst modulesArr = require(\"../../data/reducedModules.json\")\nconst modules = []\nfor (var i = 0; i < modulesArr.length; i++) {\n    modules.push({module: modulesArr[i], modCode: modulesArr[i].split(\" \")[0]})\n}\n\nfunction OptionalModulesSelector(props) {\n\n    const classes = useStyles();\n    function onClickModule(event, val) {\n        props.stateSetter(val.map(mod => mod.modCode));\n    }\n\n    return (\n        <React.Fragment>\n            <h2>Optional Modules</h2>\n            <div className={classes.root}>\n                <Autocomplete\n                    autoHighlight={true}\n                    onChange={onClickModule}\n                    multiple\n                    limitTags={2}\n                    id=\"multiple-limit-tags\"\n                    options={modules}\n                    getOptionLabel={(options) => options.module}\n                    defaultValue={[]}\n                    renderInput={(params) => (\n                        <TextField {...params} variant=\"outlined\" label=\"Optional Modules\" placeholder=\"Continuous Typing Supported\" />\n                    )}\n                />\n            </div>\n        </React.Fragment>\n    );\n\n      \n}\n\nexport default OptionalModulesSelector","import React, { useState } from \"react\"\n// import './SchoolSelector.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 500,\n        '& > * + *': {\n        marginTop: theme.spacing(3),\n        },\n    },\n    }));\n\nconst schoolsArr = require(\"../../data/schools.json\")\nconst schools = []\nfor (var i = 0; i < schoolsArr.length; i++) {\n    schools.push({school: schoolsArr[i]})\n}\n\nfunction SchoolSelector(props) {\n\n    const classes = useStyles();\n    function onClickSchool(event, val) {\n        props.stateSetter(val.map(school => school.school))\n    }\n\n    return (\n        <React.Fragment>\n            <h2>Schools</h2>\n            <div className={classes.root}>\n                <Autocomplete\n                    autoHighlight={true}\n                    onChange={onClickSchool}\n                    multiple\n                    limitTags={2}\n                    id=\"multiple-limit-tags\"\n                    options={schools}\n                    getOptionLabel={(option) => option.school}\n                    defaultValue={[]}\n                    renderInput={(params) => (\n                        <TextField {...params} variant=\"outlined\" label=\"Schools\" placeholder=\"Continuous Typing Supported\" />\n                    )}\n                />\n            </div>\n        </React.Fragment>\n    );\n\n      \n}\n\nexport default SchoolSelector","import React, {useState} from \"react\"\nimport Multiselect from \"multiselect-react-dropdown\"\nimport * as Icon from \"react-icons/fi\"\nimport Checkbox from \"react-custom-checkbox\"\nimport nextId from 'react-id-generator'\n\n\nfunction ContinentSelector(props) {\n    const continents = [\n        {name: 'Africa', id: 1}, \n        {name: 'Asia', id: 2}, \n        {name: 'Europe', id: 3}, \n        {name: 'North America', id: 4}, \n        {name: 'Oceania', id: 5}, \n        {name: 'South America', id: 6}\n    ]\n    // const [selectedContinents, setSelectedContinents] = useState([])\n    const selectedContinents = []\n\n    function onClickContinentHandler(continent) {\n        props.stateSetter(prevState => {\n            if (prevState.includes(continent)) {\n                return prevState.filter(item => item != continent);\n            } else {\n                return [...prevState, continent];\n            }\n        })\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"ContinentSelector\">\n                <h3>Continents</h3>\n            </div>\n            {continents.map(continent => \n                <Checkbox\n                    key= {continent.id}\n                    onChange = {event => onClickContinentHandler(continent.name)}\n                    checked={false}\n                    icon={\n                        <div\n                            style={{\n                            display: \"flex\",\n                            flex: 1,\n                            backgroundColor: \"#174A41\",\n                            alignSelf: \"stretch\",\n                            }}\n                        >\n                            <Icon.FiCheck color=\"white\" size={20} />\n                        </div>\n                    }\n                    borderColor=\"#174A41\"\n                    borderWidth={0.000000000001}\n                    borderRadius={20}\n                    style={{ overflow: \"hidden\" }}\n                    size={20}\n                    label={continent.name}\n                />)}\n            {selectedContinents}\n        </React.Fragment>\n    )\n}\n\nexport default ContinentSelector","import React, { useState } from \"react\"\n// import './CountrySelector.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 500,\n        '& > * + *': {\n        marginTop: theme.spacing(3),\n        },\n    },\n    }));\n\nconst countriesArr = require(\"../../data/countries.json\")\nconst countries = []\nfor (var i = 0; i < countriesArr.length; i++) {\n    countries.push({country: countriesArr[i]})\n}\n\nfunction CountrySelector(props) {\n\n    const classes = useStyles();\n    function onClickCountry(event, val) {\n        props.stateSetter(val.map(country => country.country))\n    }\n\n    return (\n        <React.Fragment>\n            <h2>Countries</h2>\n            <div className={classes.root}>\n                <Autocomplete\n                autoHighlight={true}\n                onChange={onClickCountry}\n                multiple\n                limitTags={2}\n                id=\"multiple-limit-tags\"\n                options={countries}\n                getOptionLabel={(options) => options.country}\n                defaultValue={[]}\n                renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" label=\"Countries\" placeholder=\"Continuous Typing Supported\" />\n                )}\n                />\n            </div>\n        </React.Fragment>\n    );\n\n      \n}\n\nexport default CountrySelector","import React from \"react\"\n\n//TODO display partner university module\n\nfunction ModuleMapping(props) {\n    const module = props.module\n    const equivalentModules = props.equivalentModules\n\n    \n    let numEquivalentModules = 0\n    for (const mod in equivalentModules) {\n        numEquivalentModules++;\n    }\n    console.log(equivalentModules)\n    console.log(numEquivalentModules)\n\n    const exactlyEqual = (module in equivalentModules) && (numEquivalentModules === 1)\n\n    let output = null\n    if (exactlyEqual) {\n        const equivalentModule = equivalentModules[module]\n        output = (\n            <div>\n                {module} -> {JSON.stringify(equivalentModule)}\n            </div>\n        )\n    } else {\n        let equivs = \"\"\n        const tail = []\n        let i = 0\n        for (const mod in equivalentModules) {\n            equivs += mod + \", \"\n            tail[i] = <div>{mod} -> {JSON.stringify(equivalentModules[mod])}</div>\n        }\n        const head = <div>{module} is equivalent to [{equivs.slice(0,equivs.length - 2)}]</div>\n        output = (\n            <div>\n                {head}\n                {tail}\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"ModuleMapping\" moduleCode={module}>\n            {output}\n        </div>\n    )\n\n}\n\nexport default ModuleMapping","import React, { useState } from \"react\"\nimport ModuleMapping from \"./university_components/ModuleMapping\"\n\nfunction University(props) {\n\n    const moduleMappings = new Array()\n\n    let i = 0\n    for (const module in props.mappings) {\n        moduleMappings[i] = <ModuleMapping module={module} equivalentModules={props.mappings[module]} />\n        i++\n    }\n\n\n    const [ notes, setNotes ] = useState(\"\")\n\n    return (\n        <div className=\"University\">\n            <p>\n                {props.name}, {props.numMappable}\n                {moduleMappings}\n                <input type=\"text\" onChange={event => setNotes(event.target.value)} value={notes} />\n            </p>\n        </div>\n    )\n}\n\nexport default University","import React from \"react\"\nimport University from \"../University\"\n\n/*\nTODO\n    1. Conditional rendering to show if only continent/country has been selected\n    2. Load selected options into props\n        2.1 Results will be our point of entry into our algorithm to select universities\n*/\n\nfunction Results(props) {\n\n    const result = props.result\n    const universities = []\n    let i = 0\n    for (const continent in result) {\n        // console.log(continent)\n        for (const country in result[continent]) {\n            // console.log(\"    \" + country)\n            for (const school in result[continent][country]) {\n                // console.log(\"        \" + school)\n                universities[i] = <University \n                    mappings={result[continent][country][school][\"mappings\"]} \n                    name={school}\n                    numMappable={result[continent][country][school][\"num_mappable\"]}\n                />\n                i++;\n            }\n        }\n    }\n\n\n    return (\n        <div className=\"Results\">\n            {universities}\n            {/* {<University \n                essentialModules={[\"ESSENTIALMOD1\", \"ESSENTIALMOD2\"]} \n                optionalModules={[\"OPTIONALMOD1\",\"OPTIONALMOD2\"]} \n                name=\"PLACEHOLDER_UNI_NAME\"/>} */}\n        </div>\n    )\n}\n\nexport default Results","import React, { useState, useEffect } from \"react\"\nimport EssentialModulesSelector from \"../components/selector_components/EssentialModuleSelector\"\nimport OptionalModulesSelector from \"../components/selector_components/OptionalModuleSelector\"\nimport ContinentSelector from \"../components/selector_components/ContinentSelector\"\nimport SchoolSelector from \"../components/selector_components/SchoolSelector\"\nimport CountrySelector from \"../components/selector_components/CountrySelector\"\nimport Results from \"../components/selector_components/Results\"\n\n\nfunction Selector(props) {\n\n    // const [essentialModules, setEssentialModules] = useState(new Set())\n    // const [optionalModules, setOptionalModules] = useState(new Set())\n    // const [continents, setContinents] = useState(new Set())\n    // const [countries, setCountries] = useState(new Set())\n    // const [schools, setSchools] = useState(new Set())\n\n    const [selectedEssentialModules, setSelectedEssentialModules] = useState([])\n    const [selectedOptionalModules, setSelectedOptionalModules] = useState([])\n    const [selectedContinents, setSelectedContinents] = useState([])\n    const [selectedCountries, setSelectedCountries] = useState([])\n    const [selectedSchools, setSelectedSchools] = useState([])\n\n    const [result, setResult] = useState({});\n    const body = {\n        essential_modules: selectedEssentialModules,\n        optional_modules: selectedOptionalModules,\n        schools: selectedSchools,\n        countries: selectedCountries,\n        continents: selectedContinents\n      }\n    useEffect(() => {\n      fetch('https://sepickerv2.herokuapp.com/backend', {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(body)\n      }).then(res => res.json())\n        .then(data => {console.log(data); setResult(data)})\n        .catch(err => console.log(err))\n    }, [selectedEssentialModules, selectedOptionalModules, selectedContinents, selectedCountries, selectedSchools])\n\n    return (\n        <div className=\"Selector\">\n            <h2>Delete these arrays later</h2>\n            <strong>EM:</strong>{selectedEssentialModules} <br/>\n            <strong>OM:</strong>{selectedOptionalModules} <br/> \n            <strong>Countries:</strong>{selectedCountries} <br/>\n            <strong>Schools:</strong>{selectedSchools} <br/>\n            <strong>Continents:</strong>{selectedContinents} <br/>\n     \n            <h1>Selector</h1>\n            <EssentialModulesSelector stateSetter={setSelectedEssentialModules}/>\n            <OptionalModulesSelector stateSetter={setSelectedOptionalModules}/>\n            <ContinentSelector stateSetter={setSelectedContinents}/>\n            <CountrySelector stateSetter={setSelectedCountries}/>\n            <SchoolSelector stateSetter={setSelectedSchools}/>\n            <Results result={result}/>\n\n        </div>\n    )\n}\n\nexport default Selector","import React, { Component, useState } from \"react\"\nimport { Route, Switch } from 'react-router-dom'\nimport Favourites from \"./pages/Favourites\"\nimport NavBar from \"./components/NavBar\"\nimport Selector from \"./pages/Selector\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n\n    const [ page, setPage ] = useState(\"Selector\")\n\n    // favourites should be a set of strings, where each element is \"uni_name, MOD1, MOD2, ..., MODn\"\n    // modules must be in sorted order\n    const [ favourites, setFavourites ] = useState(new Set())\n    \n\n    return (\n        <div>\n            <NavBar />\n            <Route path=\"/\" exact>\n                <Selector \n                    favourites={favourites}\n                    setFavourites={setFavourites}\n                /> \n            </Route>\n            <Route path =\"/department\" exact>\n                \n            </Route>\n            <Route path=\"/favourites\" exact>\n                <Favourites\n                    favourites={favourites}\n                    setFavourites={setFavourites}\n                />\n            </Route>\n            {/* {page === \"Selector\" \n                ? <Selector \n                    favourites={favourites}\n                    setFavourites={setFavourites}\n                    /> \n                : page === \"Favourites\"\n                ? <Favourites\n                    favourites={favourites}\n                    setFavourites={setFavourites}/>\n                : page === \"Department\"\n                ? null\n                : null\n            } */}\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}