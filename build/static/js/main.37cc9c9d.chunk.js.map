{"version":3,"sources":["components/selector_components/ModuleMapping.js","components/selector_components/School.js","pages/Favourites.js","components/selector_components/EssentialModuleSelector.js","components/NavBar.js","components/selector_components/OptionalModuleSelector.js","components/selector_components/SchoolSelector.js","components/selector_components/ContinentSelector.js","components/selector_components/CountrySelector.js","components/selector_components/Country.js","components/selector_components/Results.js","pages/Selector.js","App.js","reportWebVitals.js","index.js"],"names":["ModuleMapping","props","moduleName","result","useStyles","modulesCodeTitleMappings","moduleTitle","equivalentNUSModules","i","module","classes","getMapping","moduleCode","Grid","container","item","xs","spacing","component","Paper","className","moduleMappingPaper","elevation","alignItems","style","padding","textAlign","fontWeight","equivModule","map","mod","Fragment","Typography","Box","length","tmp","justifyContent","fontStyle","School","schoolName","toString","Object","keys","mappings","join","useState","defaultNote","localStorage","getItem","notes","setNotes","favourited","setFavourited","modules","moduleMappings","Accordion","school","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","id","FormControlLabel","onClick","event","stopPropagation","onFocus","control","Checkbox","checkedIcon","icon","checked","onChange","target","setItem","JSON","stringify","removeItem","label","TextField","multiline","innerRoot","value","Favourites","schools","NavBar","to","makeStyles","theme","root","width","marginTop","modulesArr","require","push","modCode","split","EssentialModulesSelector","Autocomplete","autoHighlight","val","stateSetter","multiple","limitTags","options","getOptionLabel","defaultValue","renderInput","params","variant","placeholder","OptionalModulesSelector","ContinentSelector","continents","name","onClickContinentHandler","continent","prevState","includes","filter","FormGroup","row","slice","state","schoolsArr","SchoolSelector","option","countriesArr","countries","country","CountrySelector","Country","countryName","sort","schl1","schl2","numMappableDiff","localeCompare","minWidth","background","moduleMappingTitle","Results","countryDetails","countryA","countryB","lengthDiff","countryDetail","Selector","selectedEssentialModules","setSelectedEssentialModules","selectedOptionalModules","setSelectedOptionalModules","selectedContinents","setSelectedContinents","selectedCountries","setSelectedCountries","selectedSchools","setSelectedSchools","setResult","loading","setLoading","body","essential_modules","optional_modules","useEffect","fetch","method","headers","then","res","json","data","catch","err","console","log","lg","height","App","Set","favourites","setFavourites","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37cc9c9d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Table, TableRow, TableCell, TableHead, Box, Grid, Paper } from \"@material-ui/core\";\r\n\r\nfunction ModuleMapping(props) {\r\n    const { moduleName, result, useStyles, modulesCodeTitleMappings } = props\r\n    const moduleTitle = modulesCodeTitleMappings[moduleName]\r\n    // result = {\r\n    //     \"EquivalentNUSModule1\": [{\"PU Module Code\": \"PU123\", \"PU Module Title\": \"DUMMY NAME\"}, ...],\r\n    //     \"EquivalentNUSModule2\": [...],\r\n    // }\r\n\r\n    const equivalentNUSModules = []\r\n    let i = 0\r\n    for (const module in result) {\r\n        equivalentNUSModules[i] = module\r\n        i++;\r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n    function getPUModules(equivModule) {\r\n        return result[equivModule].map(mod => {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Typography>\r\n                            <Box textAlign=\"left\" fontWeight=\"fontWeightBold\" style={{padding: 5}}>\r\n                                {mod[\"PU Module Code\"]}\r\n                            </Box>\r\n                            <Box textAlign=\"left\" style={{padding: 5}}>\r\n                                {mod[\"PU Module Title\"]}\r\n                            </Box>\r\n                        </Typography>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        )\r\n    }\r\n\r\n    function getMapping(moduleCode) {\r\n        return (\r\n            <Grid container item xs={12} spacing={0} component={Paper} className={classes.moduleMappingPaper} elevation={2}>\r\n                <Grid item container xs={6} alignItems=\"center\">\r\n                    <Grid item>\r\n                        <div style={{padding: 5, textAlign: \"left\", fontWeight: \"bold\"}}>\r\n                            {moduleCode}\r\n                        </div>\r\n                        <div style={{padding: 5, textAlign: \"left\"}}>\r\n                            {modulesCodeTitleMappings[moduleCode]}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                    {getPUModules(moduleCode)}\r\n                </Grid>\r\n\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    if (equivalentNUSModules.length == 1 && equivalentNUSModules[0] === moduleName) {\r\n        return <Grid container item xs={12} className={classes.tmp}>{getMapping(equivalentNUSModules[0])}</Grid>\r\n    }\r\n\r\n    return (\r\n        <Grid container item xs={12} spacing={0} justifyContent=\"center\" className={classes.tmp}>\r\n            <Paper elevation={2}>\r\n                <Grid container item xs={12} justifyContent=\"center\">\r\n                    <Grid item xs={12}  style={{padding: 5}}>\r\n                        <Typography style={{fontStyle: \"italic\"}}>Module(s) with similar content to {moduleName} {moduleTitle}</Typography>\r\n                    </Grid>\r\n                    {equivalentNUSModules.map(mod => {\r\n                        return (\r\n                            <Grid container item xs={11} justifyContent=\"center\" className={classes.tmp}>\r\n                                {getMapping(mod)}\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n\r\n    // if (equivalentNUSModules.length == 1) {\r\n    //     return (\r\n    //         <TableRow>\r\n    //             <TableCell>\r\n    //                 <Typography>{moduleName}</Typography>\r\n    //                 <Typography>{moduleTitle}</Typography>\r\n    //             </TableCell>\r\n    //             <TableCell>\r\n    //                 {getPUMap(equivalentNUSModules[0])}\r\n    //             </TableCell>\r\n    //         </TableRow>\r\n    //         )\r\n    // } else {\r\n    //     return (\r\n    //         <React.Fragment>\r\n    //             <TableHead>\r\n    //                 <TableCell>\r\n    //                     <Typography>Modules equivalent to {moduleName}</Typography>\r\n    //                 </TableCell>\r\n    //             </TableHead>\r\n    //             {equivalentNUSModules.map(mod => { return (\r\n    //                 <TableHead>\r\n    //                     <TableCell>\r\n    //                         <Typography>{mod}</Typography>\r\n    //                         <Typography>{moduleTitle}</Typography>\r\n    //                     </TableCell>\r\n    //                     <TableCell>\r\n    //                         {getPUMap(mod)}\r\n    //                     </TableCell>\r\n    //                 </TableHead>)\r\n    //             })}\r\n    //         </React.Fragment>\r\n    //     )\r\n    // }\r\n    // // THIS SHOULD BE CARD! TEMPORARY PLACEHOLDER\r\n    // function createMapping(NUSModuleCode) {\r\n    //     const innerDisplay = mapping => \r\n    //         (<TableRow>\r\n    //             <TableCell>\r\n    //                 {mapping[\"PU Module Code\"]}\r\n    //             </TableCell>\r\n    //             <TableCell>\r\n    //                 {mapping[\"PU Module Title\"]}\r\n    //             </TableCell>\r\n    //         </TableRow>)\r\n        \r\n    //     if (equivalentNUSModules.length == 1) {\r\n    //         return (\r\n    //             <TableRow>\r\n    //                 <TableCell>\r\n    //                     {result[NUSModuleCode][0][\"PU Module Code\"]}\r\n    //                 </TableCell>\r\n    //                 <TableCell>\r\n    //                     {result[NUSModuleCode][0][\"PU Module Title\"]}\r\n    //                 </TableCell>\r\n    //             </TableRow>\r\n    //         )\r\n    //     }\r\n\r\n\r\n    //     return (\r\n    //         <TableRow>\r\n    //             <TableCell>\r\n    //                 <b>{NUSModuleCode}</b>\r\n    //             </TableCell>\r\n    //             <TableCell>\r\n    //                 {result[NUSModuleCode].map(innerDisplay)}\r\n    //             </TableCell> \r\n    //         </TableRow>\r\n    //     )\r\n    // }\r\n\r\n\r\n\r\n    // return (\r\n    //     <React.Fragment>\r\n    //         <TableHead onClick={() => setOpen(!open)}>\r\n    //             <TableRow>\r\n    //                 <TableCell align=\"left\">\r\n    //                     <p align=\"left\">{moduleName}</p>\r\n    //                     {equivalentNUSModules.length > 1\r\n    //                         ? \"equivalent to \" + equivalentNUSModules.toString()\r\n    //                         : \"\"\r\n    //                     }\r\n    //                 </TableCell>\r\n    //             </TableRow>\r\n    //         </TableHead>\r\n    //         <TableBody>\r\n    //             <TableCell>\r\n    //                 <Collapse in={open}>\r\n    //                     <Box margin={1}>\r\n    //                         {equivalentNUSModules.map(createMapping)}\r\n    //                     </Box>\r\n    //                 </Collapse>\r\n    //             </TableCell>\r\n    //         </TableBody>\r\n    //     </React.Fragment>\r\n    // )\r\n\r\n}\r\n\r\nexport default ModuleMapping\r\n","import React, { useState, useEffect } from \"react\"\r\nimport ModuleMapping from \"./ModuleMapping\"\r\n\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Table from \"@material-ui/core/Table\"\r\nimport { TableHead, TableRow, TableCell, TableContainer, Paper, TextField, Grid, Checkbox, FormControlLabel } from \"@material-ui/core\";\r\n\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport { LocalSeeOutlined } from \"@material-ui/icons\";\r\n\r\nfunction School(props) {\r\n    const { schoolName, result, useStyles, modulesCodeTitleMappings } = props\r\n    // result = {\"mappings\": {...}, \"num_mappable\": int}\r\n\r\n    function toString() {\r\n        return schoolName + Object.keys(result.mappings).join();\r\n    }\r\n\r\n    const [ open, setOpen ] = useState(false)\r\n\r\n    const defaultNote = (toString()+\"notes\" in localStorage) ? localStorage.getItem(toString()+\"notes\") : \"\"\r\n    const [ notes, setNotes ] = useState(defaultNote)\r\n\r\n    const [ favourited, setFavourited ] = useState(toString() in localStorage)\r\n    function onFavHandler(event) {\r\n        if (event.target.checked) {\r\n            setFavourited(true)\r\n            setNotes(notes)\r\n            localStorage.setItem(toString(),JSON.stringify(result))\r\n        } else {\r\n            setFavourited(false)\r\n            localStorage.removeItem(toString())\r\n        }\r\n    }\r\n\r\n    const modules = []\r\n    let i = 0\r\n    for (const module in result[\"mappings\"]) {\r\n        modules[i] = module\r\n        i++;\r\n    }\r\n\r\n    const classes = useStyles(); \r\n    const moduleMappings = modules.map(module => <ModuleMapping \r\n        moduleName={module} \r\n        result={result[\"mappings\"][module]} \r\n        useStyles={useStyles}\r\n        modulesCodeTitleMappings={modulesCodeTitleMappings}/>)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Accordion className={classes.school} TransitionProps={{ unmountOnExit: true }}>\r\n                <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                    <FormControlLabel\r\n                        aria-label=\"Acknowledge\"\r\n                        onClick={(event) => event.stopPropagation()}\r\n                        onFocus={(event) => event.stopPropagation()}\r\n                        control={<Checkbox \r\n                            checkedIcon={<FavoriteIcon />} \r\n                            icon={<FavoriteBorderIcon />}\r\n                            checked={favourited}\r\n                            onChange={onFavHandler}\r\n                            />}\r\n                        label=\"\"\r\n                    />\r\n                    <div>\r\n                        <Typography>{schoolName}</Typography>\r\n                        <Typography>{result['num_mappable']} module(s) available!</Typography>\r\n                    </div>\r\n                </AccordionSummary>\r\n\r\n                <Grid container xs={12} spacing={0}>\r\n                    {moduleMappings}\r\n                </Grid>\r\n                <TextField \r\n                    className={classes.tmp}\r\n                    style={{padding: 5}}\r\n                    label=\"Notes\" \r\n                    multiline={true}\r\n                    className={classes.innerRoot}\r\n                    maxRows={6}\r\n                    value={notes}\r\n                    component={Paper}\r\n                    onChange={event => {\r\n                        setNotes(event.target.value)\r\n                        localStorage.setItem(toString()+\"notes\", event.target.value)\r\n                    }}\r\n                    />\r\n            </Accordion>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default School","import React, { useState } from \"react\"\r\nimport School from \"../components/selector_components/School\"\r\n\r\nfunction Favourites(props) {\r\n\r\n    // REQUIRE LOGIC FOR SHOWING HOW TO HANDLE ELEMENTS IN props.favoruites\r\n    const schools = localStorage.getItem(\"fav\");\r\n    return (\r\n        <div>\r\n            {schools}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Favourites","import React, { useState } from \"react\"\r\nimport './EssentialModuleSelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    }));\r\n\r\nconst modulesArr = require(\"../../data/reducedModules.json\")\r\nconst modules = []\r\nfor (var i = 0; i < modulesArr.length; i++) {\r\n    modules.push({module: modulesArr[i], modCode: modulesArr[i].split(\" \")[0]})\r\n}\r\n\r\nfunction EssentialModulesSelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickModule(event, val) {\r\n        props.stateSetter(val.map(mod => mod.modCode))\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Essential Modules</h2>\r\n            <div className={classes.root}>\r\n            <Autocomplete\r\n                autoHighlight={true}\r\n                onChange={onClickModule}\r\n                multiple\r\n                limitTags={2}\r\n                id=\"multiple-limit-tags\"\r\n                options={modules}\r\n                getOptionLabel={(options) => options.module}\r\n                defaultValue={[]}\r\n                renderInput={(params) => (\r\n                    <TextField {...params} variant=\"outlined\" label=\"Essential Modules\" placeholder=\"Continuous Typing Supported\" />\r\n                )}\r\n            />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default EssentialModulesSelector","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction NavBar(props) {\r\n\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/'>Selector</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/department'>Department</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/favourites'>Favourites</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React, { useState } from \"react\"\r\nimport './OptionalModuleSelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    }));\r\n\r\nconst modulesArr = require(\"../../data/reducedModules.json\")\r\nconst modules = []\r\nfor (var i = 0; i < modulesArr.length; i++) {\r\n    modules.push({module: modulesArr[i], modCode: modulesArr[i].split(\" \")[0]})\r\n}\r\n\r\nfunction OptionalModulesSelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickModule(event, val) {\r\n        props.stateSetter(val.map(mod => mod.modCode));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Optional Modules</h2>\r\n            <div className={classes.root}>\r\n                <Autocomplete\r\n                    autoHighlight={true}\r\n                    onChange={onClickModule}\r\n                    multiple\r\n                    limitTags={2}\r\n                    id=\"multiple-limit-tags\"\r\n                    options={modules}\r\n                    getOptionLabel={(options) => options.module}\r\n                    defaultValue={[]}\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} variant=\"outlined\" label=\"Optional Modules\" placeholder=\"Continuous Typing Supported\" />\r\n                    )}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default OptionalModulesSelector","import React, { useState } from \"react\"\r\n// import './SchoolSelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    }));\r\n\r\nconst schoolsArr = require(\"../../data/schools.json\")\r\nconst schools = []\r\nfor (var i = 0; i < schoolsArr.length; i++) {\r\n    schools.push({school: schoolsArr[i]})\r\n}\r\n\r\nfunction SchoolSelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickSchool(event, val) {\r\n        props.stateSetter(val.map(school => school.school))\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Schools</h2>\r\n            <div className={classes.root}>\r\n                <Autocomplete\r\n                    autoHighlight={true}\r\n                    onChange={onClickSchool}\r\n                    multiple\r\n                    limitTags={2}\r\n                    id=\"multiple-limit-tags\"\r\n                    options={schools}\r\n                    getOptionLabel={(option) => option.school}\r\n                    defaultValue={[]}\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} variant=\"outlined\" label=\"Schools\" placeholder=\"Continuous Typing Supported\" />\r\n                    )}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default SchoolSelector","import React, {useState} from \"react\"\r\nimport Multiselect from \"multiselect-react-dropdown\"\r\nimport * as Icon from \"react-icons/fi\"\r\n// import Checkbox from \"react-custom-checkbox\"\r\nimport nextId from 'react-id-generator'\r\nimport { FormGroup, FormControlLabel, Checkbox } from '@material-ui/core'\r\n\r\n\r\nfunction ContinentSelector(props) {\r\n    const continents = [\r\n        {name: 'Africa', id: 1}, \r\n        {name: 'Asia', id: 2}, \r\n        {name: 'Europe', id: 3}, \r\n        {name: 'North America', id: 4}, \r\n        {name: 'Oceania', id: 5}, \r\n        {name: 'South America', id: 6}\r\n    ]\r\n    // const [selectedContinents, setSelectedContinents] = useState([])\r\n    const selectedContinents = []\r\n\r\n    function onClickContinentHandler(continent) {\r\n        props.stateSetter(prevState => {\r\n            if (prevState.includes(continent)) {\r\n                return prevState.filter(item => item != continent);\r\n            } else {\r\n                return [...prevState, continent];\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <FormGroup row='true'>\r\n                {continents.slice(0, 3).map(continent =>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={props.state.includes(continent.name)} onChange={(event)=>(onClickContinentHandler(event.target.name))} name={continent.name} />}\r\n                        label={continent.name}\r\n                    />\r\n                )}\r\n            </FormGroup>\r\n            <FormGroup row='true'>\r\n                {continents.slice(3, 6).map(continent =>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={props.state.includes(continent.name)} onChange={(event)=>(onClickContinentHandler(event.target.name))} name={continent.name} />}\r\n                        label={continent.name}\r\n                    />\r\n                )}\r\n            </FormGroup>\r\n        </React.Fragment>\r\n        // <React.Fragment>\r\n        //     <div className=\"ContinentSelector\">\r\n        //         <h3>Continents</h3>\r\n        //     </div>\r\n        //     {continents.map(continent => \r\n        //         <Checkbox\r\n        //             key= {continent.id}\r\n        //             onChange = {event => onClickContinentHandler(continent.name)}\r\n        //             checked={false}\r\n        //             icon={\r\n        //                 <div\r\n        //                     style={{\r\n        //                     display: \"flex\",\r\n        //                     flex: 1,\r\n        //                     backgroundColor: \"#174A41\",\r\n        //                     alignSelf: \"stretch\",\r\n        //                     }}\r\n        //                 >\r\n        //                     <Icon.FiCheck color=\"white\" size={20} />\r\n        //                 </div>\r\n        //             }\r\n        //             borderColor=\"#174A41\"\r\n        //             borderWidth={0.000000000001}\r\n        //             borderRadius={20}\r\n        //             style={{ overflow: \"hidden\" }}\r\n        //             size={20}\r\n        //             label={continent.name}\r\n        //         />)}\r\n        //     {selectedContinents}\r\n        // </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ContinentSelector","import React, { useState } from \"react\"\r\n// import './CountrySelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    }));\r\n\r\nconst countriesArr = require(\"../../data/countries.json\")\r\nconst countries = []\r\nfor (var i = 0; i < countriesArr.length; i++) {\r\n    countries.push({country: countriesArr[i]})\r\n}\r\n\r\nfunction CountrySelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickCountry(event, val) {\r\n        props.stateSetter(val.map(country => country.country))\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Countries</h2>\r\n            <div className={classes.root}>\r\n                <Autocomplete\r\n                autoHighlight={true}\r\n                onChange={onClickCountry}\r\n                multiple\r\n                limitTags={2}\r\n                id=\"multiple-limit-tags\"\r\n                options={countries}\r\n                getOptionLabel={(options) => options.country}\r\n                defaultValue={[]}\r\n                renderInput={(params) => (\r\n                    <TextField {...params} variant=\"outlined\" label=\"Countries\" placeholder=\"Continuous Typing Supported\" />\r\n                )}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default CountrySelector","import React, { useState, useEffect } from \"react\"\r\nimport School from \"./School\"\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nfunction Country(props) {\r\n    const { countryName, result, useStyles, modulesCodeTitleMappings } = props\r\n\r\n    const [ open, setOpen ] = useState(false)\r\n    let schools = []\r\n    let i = 0\r\n    for (const school in result) {\r\n        schools[i] = [school, result[school][\"num_mappable\"]]\r\n        i++;\r\n    }\r\n\r\n    schools.sort((schl1, schl2) => {\r\n        const numMappableDiff = schl2[1] - schl1[1]\r\n        if (numMappableDiff != 0) {\r\n            return numMappableDiff\r\n        } else {\r\n            return schl1[0].localeCompare(schl2[0])\r\n        }\r\n    })\r\n\r\n    const tmp = []\r\n    for (let i = 0; i < schools.length; i++) {\r\n        tmp[i] = schools[i][0]\r\n    }\r\n    schools = tmp\r\n\r\n    const classes = useStyles();\r\n      \r\n\r\n    return (\r\n        <Accordion className={classes.country} TransitionProps={{ unmountOnExit: true }}>\r\n            <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n            >\r\n                <div>\r\n                    <Typography>{countryName}</Typography>\r\n                    <Typography>{schools.length} school(s) available!</Typography>\r\n                </div>\r\n            </AccordionSummary>\r\n                {schools.map(school => {return (\r\n                        // <AccordionDetails className={classes.root}>\r\n                            <School \r\n                                schoolName={school} \r\n                                result={result[school]} \r\n                                useStyles={useStyles}\r\n                                modulesCodeTitleMappings={modulesCodeTitleMappings}/>\r\n                        // </AccordionDetails>\r\n                    )})}\r\n        </Accordion>\r\n    )\r\n\r\n}\r\n\r\nexport default Country","import React, { useState, useEffect } from \"react\"\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\n\r\nimport Country from \"./Country\"\r\n\r\n/*\r\nTODO\r\n    1. Conditional rendering to show if only continent/country has been selected\r\n    2. Load selected options into props\r\n        2.1 Results will be our point of entry into our algorithm to select universities\r\n*/\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    country: {\r\n        width: '80%',\r\n        justifyContent: \"center\",\r\n        padding: theme.spacing(2),\r\n        minWidth: 500,\r\n        background: \"#42a7f5\",\r\n    },\r\n    tmp: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    school: {\r\n        width: '100%',\r\n        background: \"#42f5a4\",\r\n        padding: theme.spacing(1),\r\n    },\r\n    moduleMappingTitle: {\r\n        width: '100%',\r\n        background: \"red\"\r\n    },\r\n    moduleMappingPaper: {\r\n        width: \"100%\",\r\n        background: \"orange\",\r\n        padding: theme.spacing(1),\r\n    },\r\n    root: {\r\n        width: '80%',\r\n        minWidth: 500,\r\n        background: 'blue',\r\n    },\r\n    innerRoot: {\r\n        width: \"100%\",\r\n    },\r\n    }));\r\n\r\nconst modulesCodeTitleMappings = require(\"../../data/moduleCodeTitleMappings.json\")\r\n\r\nfunction Results(props) {\r\n\r\n    const { result } = props\r\n    const countryDetails = []\r\n    let i = 0\r\n    for (const continent in result) {\r\n        for (const country in result[continent]) {\r\n            countryDetails[i] = {\"countryName\": country, \"result\": result[continent][country]}\r\n            i++\r\n        }\r\n    }\r\n\r\n    // Display countries in order of how many schools are available, followed by lexicographic order\r\n    countryDetails.sort((countryA, countryB) => {\r\n        const lengthDiff = Object.keys(countryB.result).length - Object.keys(countryA.result).length\r\n        return lengthDiff !== 0\r\n            ? lengthDiff\r\n            : countryA[\"countryName\"].localeCompare(countryB[\"countryName\"])\r\n    })\r\n\r\n    \r\n    return countryDetails.map(countryDetail => <Country \r\n            countryName={countryDetail[\"countryName\"]} \r\n            result={countryDetail[\"result\"] } \r\n            useStyles={useStyles}\r\n            modulesCodeTitleMappings={modulesCodeTitleMappings}/>)\r\n}\r\n\r\nexport default Results","import React, { useState, useEffect } from \"react\"\r\nimport EssentialModulesSelector from \"../components/selector_components/EssentialModuleSelector\"\r\nimport OptionalModulesSelector from \"../components/selector_components/OptionalModuleSelector\"\r\nimport ContinentSelector from \"../components/selector_components/ContinentSelector\"\r\nimport SchoolSelector from \"../components/selector_components/SchoolSelector\"\r\nimport CountrySelector from \"../components/selector_components/CountrySelector\"\r\nimport Results from \"../components/selector_components/Results\"\r\n\r\nimport { Collapse, Table, TableCell, Paper, Grid, Card, Typograph, CircularProgress } from '@material-ui/core'\r\nimport { sizing } from '@material-ui/system';\r\n\r\nimport './Selector.css'\r\n\r\nfunction Selector(props) {\r\n\r\n    // const [essentialModules, setEssentialModules] = useState(new Set())\r\n    // const [optionalModules, setOptionalModules] = useState(new Set())\r\n    // const [continents, setContinents] = useState(new Set())\r\n    // const [countries, setCountries] = useState(new Set())\r\n    // const [schools, setSchools] = useState(new Set())\r\n\r\n    const [selectedEssentialModules, setSelectedEssentialModules] = useState([])\r\n    const [selectedOptionalModules, setSelectedOptionalModules] = useState([])\r\n    const [selectedContinents, setSelectedContinents] = useState([])\r\n    const [selectedCountries, setSelectedCountries] = useState([])\r\n    const [selectedSchools, setSelectedSchools] = useState([])\r\n\r\n    const [result, setResult] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const body = {\r\n        essential_modules: selectedEssentialModules,\r\n        optional_modules: selectedOptionalModules,\r\n        schools: selectedSchools,\r\n        countries: selectedCountries,\r\n        continents: selectedContinents\r\n      }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      setLoading(true)\r\n      fetch('http://127.0.0.1:5000/backend', {\r\n          method: \"POST\",\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n      }).then(res => res.json())\r\n        .then(data => {setLoading(false); setResult(data)})\r\n        .catch(err => console.log(err))\r\n    }, [selectedEssentialModules, selectedOptionalModules, selectedContinents, selectedCountries, selectedSchools])\r\n\r\n    return (\r\n        <div className=\"Selector\">\r\n            {/* <h2>Delete these arrays later</h2>\r\n            <strong>EM:</strong>{selectedEssentialModules} <br/>\r\n            <strong>OM:</strong>{selectedOptionalModules} <br/> \r\n            <strong>Countries:</strong>{selectedCountries} <br/>\r\n            <strong>Schools:</strong>{selectedSchools} <br/>\r\n            <strong>Continents:</strong>{selectedContinents} <br/> */}\r\n            {/* <div class=\"wrap\"> */}\r\n            <Grid container spacing={3} justifyContent=\"center\">\r\n              <Grid item xs={12} lg={6}>\r\n                <Paper id=\"left-box\">\r\n                  <h1>Selector</h1>\r\n                  <EssentialModulesSelector stateSetter={setSelectedEssentialModules}/>\r\n                  <OptionalModulesSelector stateSetter={setSelectedOptionalModules}/>\r\n                  <ContinentSelector stateSetter={setSelectedContinents} state={selectedContinents}/>\r\n                  <CountrySelector stateSetter={setSelectedCountries}/>\r\n                  <SchoolSelector stateSetter={setSelectedSchools}/>\r\n                </Paper>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} lg={6} style={{height:\"100vh\"}}>\r\n                <Paper id=\"right-box\">\r\n                    <h1>Results</h1>\r\n                    {loading\r\n                      ? <h2>Loading...</h2>\r\n                      : selectedEssentialModules.length + selectedOptionalModules.length === 0\r\n                      ? <h2>No Module Selected Yet</h2>\r\n                      : Object.keys(result).length === 0 \r\n                      ? <h2>No mappings found :(</h2>\r\n                      : <p></p>}\r\n                    <Results result={result}/>\r\n                </Paper>\r\n              </Grid>\r\n\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Selector","import React, { Component, useState } from \"react\"\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Favourites from \"./pages/Favourites\"\r\nimport NavBar from \"./components/NavBar\"\r\nimport Selector from \"./pages/Selector\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nfunction App() {\r\n\r\n    const [ page, setPage ] = useState(\"Selector\")\r\n\r\n    // favourites should be a set of strings, where each element is \"uni_name, MOD1, MOD2, ..., MODn\"\r\n    // modules must be in sorted order\r\n    const [ favourites, setFavourites ] = useState(new Set())\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <Route path=\"/\" exact>\r\n                <Selector \r\n                    favourites={favourites}\r\n                    setFavourites={setFavourites}\r\n                /> \r\n            </Route>\r\n            <Route path =\"/department\" exact>\r\n                \r\n            </Route>\r\n            <Route path=\"/favourites\" exact>\r\n                <Favourites\r\n                    favourites={favourites}\r\n                    setFavourites={setFavourites}\r\n                />\r\n            </Route>\r\n            {/* {page === \"Selector\" \r\n                ? <Selector \r\n                    favourites={favourites}\r\n                    setFavourites={setFavourites}\r\n                    /> \r\n                : page === \"Favourites\"\r\n                ? <Favourites\r\n                    favourites={favourites}\r\n                    setFavourites={setFavourites}/>\r\n                : page === \"Department\"\r\n                ? null\r\n                : null\r\n            } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}