{"version":3,"sources":["components/selector_components/ModuleMapping.js","pages/Favourites.js","components/selector_components/EssentialModuleSelector.js","components/NavBar.js","components/selector_components/OptionalModuleSelector.js","components/selector_components/SchoolSelector.js","components/selector_components/ContinentSelector.js","components/selector_components/CountrySelector.js","components/selector_components/Country.js","components/selector_components/Results.js","pages/Selector.js","App.js","reportWebVitals.js","index.js","components/selector_components/School.js"],"names":["ModuleMapping","props","moduleName","result","useStyles","modulesCodeTitleMappings","moduleTitle","equivalentNUSModules","i","module","classes","getMapping","moduleCode","container","item","xs","spacing","component","Paper","className","moduleMappingPaper","elevation","alignItems","style","padding","textAlign","fontWeight","fontSize","fontFamily","equivModule","map","mod","length","tmp","justifyContent","backgroundColor","fontStyle","makeStyles","theme","country","width","minWidth","background","favourites","maxWidth","school","moduleMappingTitle","root","innerRoot","require","Favourites","useState","JSON","parse","localStorage","getItem","schools","setSchools","setTitle","func","index","endPoint","slice","toUpperCase","schoolName","console","log","draggableId","provided","Grid","ref","innerRef","draggableProps","dragHandleProps","School","paddingTop","Typography","variant","onDragEnd","destination","items","Array","from","splice","source","reorderedItem","setItem","stringify","droppableId","droppableProps","marginBottom","color","Fragment","placeholder","NavBar","class","lg","height","position","id","to","marginTop","modulesArr","moduleCodeTitleMappings","modules","push","modCode","split","EssentialModulesSelector","defaultValue","Autocomplete","autoHighlight","onChange","event","val","stateSetter","multiple","limitTags","options","getOptionLabel","renderTags","value","getTagProps","option","Chip","label","renderInput","params","TextField","OptionalModulesSelector","ContinentSelector","name","continent","FormControlLabel","control","Checkbox","checked","state","includes","prevState","filter","onClickContinentHandler","target","schoolsArr","SchoolSelector","countriesArr","countries","CountrySelector","Country","countryName","sort","schl1","schl2","numMappableDiff","localeCompare","Accordion","TransitionProps","unmountOnExit","square","AccordionSummary","expandIcon","Box","Results","countryDetails","countryA","countryB","lengthDiff","Object","keys","countryDetail","Selector","selectedEssentialModules","setSelectedEssentialModules","selectedOptionalModules","setSelectedOptionalModules","selectedContinents","setSelectedContinents","selectedCountries","setSelectedCountries","selectedSchools","setSelectedSchools","setResult","loading","setLoading","body","essential_modules","optional_modules","continents","moduleTooltipOpen","setModuleTooltipOpen","locationTooltipOpen","setLocationTooltipOpen","useEffect","fetch","method","headers","then","res","json","data","catch","err","margin","display","paddingRight","ClickAwayListener","onClickAway","Tooltip","open","disableFocusListener","onClick","title","IconButton","size","paddingBottom","app","metaContent","visualViewport","App","favouriteNames","setFavourites","document","ReactGa","initialize","pageview","Helmet","content","path","exact","align","bottom","borderTop","opacity","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","schoolCityMappings","toString","mappings","join","defaultNote","notes","setNotes","favourited","setFavourited","moduleMappings","stopPropagation","onFocus","checkedIcon","icon","removeItem","newFavouriteNames","undefined","output","showModules","maxHeight","minHeight","paddingLeft","InputProps","multiline","maxRows"],"mappings":"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","file":"static/js/main.4a7f641a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Table, TableRow, TableCell, TableHead, Box, Grid, Paper } from \"@material-ui/core\";\r\n\r\nfunction ModuleMapping(props) {\r\n    const { moduleName, result, useStyles, modulesCodeTitleMappings } = props\r\n    const moduleTitle = modulesCodeTitleMappings[moduleName]\r\n    // result = {\r\n    //     \"EquivalentNUSModule1\": [{\"PU Module Code\": \"PU123\", \"PU Module Title\": \"DUMMY NAME\"}, ...],\r\n    //     \"EquivalentNUSModule2\": [...],\r\n    // }\r\n\r\n    const equivalentNUSModules = []\r\n    let i = 0\r\n    for (const module in result) {\r\n        equivalentNUSModules[i] = module\r\n        i++;\r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n    function getPUModules(equivModule) {\r\n        return result[equivModule].map(mod => {\r\n                return (\r\n                    <Grid item xs={12}>\r\n                        <Typography>\r\n                            <Box textAlign=\"left\" style={{padding: 5, fontSize: \"16px\", fontWeight: \"bold\", fontFamily: \"Georgia, sans-serif\"}}>\r\n                                {mod[\"PU Module Code\"]}\r\n                            </Box>\r\n                            <Box textAlign=\"left\" style={{padding: 5, fontSize: \"16px\", fontFamily: \"Georgia, sans-serif\"}}>\r\n                                {mod[\"PU Module Title\"]}\r\n                            </Box>\r\n                        </Typography>\r\n                    </Grid>\r\n                )\r\n            }\r\n        )\r\n    }\r\n\r\n    function getMapping(moduleCode) {\r\n        return (\r\n            <Grid container item xs={12} spacing={0} component={Paper} className={classes.moduleMappingPaper} elevation={1}>\r\n                <Grid item container xs={6} alignItems=\"center\">\r\n                    <Grid item xs={6}>\r\n                        <div style={{padding: 5, textAlign: \"left\", fontWeight: \"bold\", fontSize: \"16px\", fontFamily: \"Georgia, sans-serif\"}}>\r\n                            {moduleCode}\r\n                        </div>\r\n                        <div style={{padding: 5, textAlign: \"left\", fontSize: \"16px\", fontFamily: \"Georgia, sans-serif\"}}>\r\n                            {modulesCodeTitleMappings[moduleCode]}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container item xs={6} alignItems=\"center\">\r\n                    {getPUModules(moduleCode)}\r\n                </Grid>\r\n\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    if (equivalentNUSModules.length == 1 && equivalentNUSModules[0] === moduleName) {\r\n        return <Grid container item xs={12} className={classes.tmp}>{getMapping(equivalentNUSModules[0])}</Grid>\r\n    }\r\n\r\n    return (\r\n        <Grid container item xs={12} spacing={0} justifyContent=\"center\" className={classes.tmp}>\r\n            <Grid container item xs={12} justifyContent=\"center\" className={classes.tmp} component={Paper} elevation={1} style={{backgroundColor: \"#F1F1F1\"}}>\r\n                <Grid item xs={12}  style={{padding: 5}}>\r\n                    <Typography style={{fontStyle: \"italic\", fontFamily: \"Georgia, sans-serif\", fontSize: \"12px\"}}>\r\n                        Module(s) with similar content to {moduleName} {moduleTitle}\r\n                    </Typography>\r\n                </Grid>\r\n                {equivalentNUSModules.map(mod => {\r\n                    return (\r\n                        <Grid container item xs={12} justifyContent=\"center\" className={classes.tmp}>\r\n                            {getMapping(mod)}\r\n                        </Grid>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n\r\n    // if (equivalentNUSModules.length == 1) {\r\n    //     return (\r\n    //         <TableRow>\r\n    //             <TableCell>\r\n    //                 <Typography>{moduleName}</Typography>\r\n    //                 <Typography>{moduleTitle}</Typography>\r\n    //             </TableCell>\r\n    //             <TableCell>\r\n    //                 {getPUMap(equivalentNUSModules[0])}\r\n    //             </TableCell>\r\n    //         </TableRow>\r\n    //         )\r\n    // } else {\r\n    //     return (\r\n    //         <React.Fragment>\r\n    //             <TableHead>\r\n    //                 <TableCell>\r\n    //                     <Typography>Modules equivalent to {moduleName}</Typography>\r\n    //                 </TableCell>\r\n    //             </TableHead>\r\n    //             {equivalentNUSModules.map(mod => { return (\r\n    //                 <TableHead>\r\n    //                     <TableCell>\r\n    //                         <Typography>{mod}</Typography>\r\n    //                         <Typography>{moduleTitle}</Typography>\r\n    //                     </TableCell>\r\n    //                     <TableCell>\r\n    //                         {getPUMap(mod)}\r\n    //                     </TableCell>\r\n    //                 </TableHead>)\r\n    //             })}\r\n    //         </React.Fragment>\r\n    //     )\r\n    // }\r\n    // // THIS SHOULD BE CARD! TEMPORARY PLACEHOLDER\r\n    // function createMapping(NUSModuleCode) {\r\n    //     const innerDisplay = mapping => \r\n    //         (<TableRow>\r\n    //             <TableCell>\r\n    //                 {mapping[\"PU Module Code\"]}\r\n    //             </TableCell>\r\n    //             <TableCell>\r\n    //                 {mapping[\"PU Module Title\"]}\r\n    //             </TableCell>\r\n    //         </TableRow>)\r\n        \r\n    //     if (equivalentNUSModules.length == 1) {\r\n    //         return (\r\n    //             <TableRow>\r\n    //                 <TableCell>\r\n    //                     {result[NUSModuleCode][0][\"PU Module Code\"]}\r\n    //                 </TableCell>\r\n    //                 <TableCell>\r\n    //                     {result[NUSModuleCode][0][\"PU Module Title\"]}\r\n    //                 </TableCell>\r\n    //             </TableRow>\r\n    //         )\r\n    //     }\r\n\r\n\r\n    //     return (\r\n    //         <TableRow>\r\n    //             <TableCell>\r\n    //                 <b>{NUSModuleCode}</b>\r\n    //             </TableCell>\r\n    //             <TableCell>\r\n    //                 {result[NUSModuleCode].map(innerDisplay)}\r\n    //             </TableCell> \r\n    //         </TableRow>\r\n    //     )\r\n    // }\r\n\r\n\r\n\r\n    // return (\r\n    //     <React.Fragment>\r\n    //         <TableHead onClick={() => setOpen(!open)}>\r\n    //             <TableRow>\r\n    //                 <TableCell align=\"left\">\r\n    //                     <p align=\"left\">{moduleName}</p>\r\n    //                     {equivalentNUSModules.length > 1\r\n    //                         ? \"equivalent to \" + equivalentNUSModules.toString()\r\n    //                         : \"\"\r\n    //                     }\r\n    //                 </TableCell>\r\n    //             </TableRow>\r\n    //         </TableHead>\r\n    //         <TableBody>\r\n    //             <TableCell>\r\n    //                 <Collapse in={open}>\r\n    //                     <Box margin={1}>\r\n    //                         {equivalentNUSModules.map(createMapping)}\r\n    //                     </Box>\r\n    //                 </Collapse>\r\n    //             </TableCell>\r\n    //         </TableBody>\r\n    //     </React.Fragment>\r\n    // )\r\n\r\n}\r\n\r\nexport default ModuleMapping\r\n","import React, { useState } from \"react\"\r\nimport School from \"../components/selector_components/School\"\r\nimport {makeStyles, Grid, Paper, Typography } from \"@material-ui/core\"\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    country: {\r\n        width: '80%',\r\n        justifyContent: \"center\",\r\n        padding: theme.spacing(2),\r\n        minWidth: 100,\r\n        background: \"#DDDDDF\",\r\n    },\r\n    tmp: {\r\n        padding: theme.spacing(1),\r\n        // minWidth: 200,\r\n        // maxWidth: 500\r\n    },\r\n    favourites: {\r\n        padding: theme.spacing(1),\r\n        minWidth: 300,\r\n        maxWidth: 720\r\n    },\r\n    school: {\r\n        width: '100%',\r\n        background: \"rgb(247,247,247)\",\r\n        minWidth: 100,\r\n        padding: theme.spacing(1),\r\n        // boxShadow: \"0 0 6px 1px rgb(150,150,150)\"\r\n    },\r\n    moduleMappingTitle: {\r\n        width: '100%',\r\n        // minWidth: 200,\r\n        background: \"red\"\r\n    },\r\n    moduleMappingPaper: {\r\n        width: \"100%\",\r\n        background: \"#edbb3d\",\r\n        // minWidth: 200,\r\n        padding: theme.spacing(1),\r\n    },\r\n    root: {\r\n        width: '80%',\r\n        minWidth: 500,\r\n        background: 'blue',\r\n    },\r\n    innerRoot: {\r\n        width: \"100%\",\r\n    },\r\n    }));\r\n\r\nconst modulesCodeTitleMappings = require(\"../data/moduleCodeTitleMappings.json\")\r\n\r\n\r\n\r\nfunction Favourites(props) {\r\n\r\n    // REQUIRE LOGIC FOR SHOWING HOW TO HANDLE ELEMENTS IN props.favoruites\r\n    const [ schools, setSchools ] = useState(JSON.parse(localStorage.getItem(\"favouriteNames\")))\r\n    props.setTitle(\"SEPicker - Favourites\")\r\n\r\n    const classes = useStyles()\r\n\r\n    function func(school, index) {\r\n        const result = JSON.parse(localStorage.getItem(school))\r\n\r\n        let endPoint = school.length\r\n        for (let i = school.length; i > 0; i--) {\r\n            if (school.slice(i-1,i).toUpperCase() !== school.slice(i-1,i)) {\r\n                endPoint = i\r\n                break\r\n            }\r\n        }\r\n        const schoolName = school.slice(0,endPoint)\r\n        console.log(school)\r\n        return (\r\n            <Draggable key={school} draggableId={school} index={index}>\r\n                {provided => (\r\n                    <Grid container item ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <School \r\n                            schoolName={schoolName} \r\n                            result={result} \r\n                            useStyles={useStyles}\r\n                            modulesCodeTitleMappings={modulesCodeTitleMappings}\r\n                            setSchools={setSchools}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Draggable>\r\n        )\r\n    }\r\n\r\n    function handleOnDragEnd(result) {\r\n        if (!result.destination) return;\r\n        console.log(result)\r\n        const items = Array.from(schools);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n        setSchools(items);\r\n        localStorage.setItem(\"favouriteNames\",JSON.stringify(items))\r\n      }\r\n    \r\n    return (\r\n        <Grid container xs={12} justifyContent=\"center\">\r\n            <Grid container justifyContent=\"center\" style={{maxWidth: \"80%\", paddingTop: \"1vh\"}}>\r\n                <Grid container item xs={12} justifyContent=\"center\">\r\n                    <Typography variant=\"h5\" style={{fontWeight: \"bold\", fontFamily: \"Georgia, sans-serif\"}}>Drag and drop to rank!</Typography>\r\n                    <br></br>\r\n                </Grid>\r\n                <Grid container item xs={12} justifyContent=\"center\">\r\n                    <br></br>\r\n                </Grid>\r\n                <Grid container item xs={12} style={{maxWidth: \"100%\"}} justifyContent=\"center\">\r\n                    <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                        <Droppable droppableId=\"favs\">\r\n                        {(provided) => (\r\n                            <Grid \r\n                                container \r\n                                item \r\n                                xs={11} \r\n                                justifyContent=\"center\" \r\n                                spacing={3} \r\n                                component={Paper} \r\n                                className={classes.favourites}\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                                style={{marginBottom:\"2%\", backgroundColor: \"#29648A\", padding: \"2%\"}}\r\n                            >\r\n                                {schools.length == 0 \r\n                                    ? <Typography variant=\"h5\" style={{fontSize:\"1.4rem\", color:\"white\", fontFamily: \"Courier New\"}}>No school favourited yet</Typography>\r\n                                    : <React.Fragment>\r\n                                       {schools.map(func)}\r\n                                       {provided.placeholder}\r\n                                      </React.Fragment>}\r\n                            </Grid>\r\n                            \r\n                        )}\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n                </Grid>\r\n             </Grid>\r\n        </Grid>\r\n    )\r\n    \r\n}\r\n\r\nexport default Favourites","import React, { useState } from \"react\"\r\nimport './EssentialModuleSelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, Chip } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        marginTop: 10,\r\n    },\r\n    }));\r\n\r\nconst modulesArr = require(\"../../data/reducedModules.json\")\r\nconst moduleCodeTitleMappings = require(\"../../data/moduleCodeTitleMappings.json\")\r\n\r\nconst modules = []\r\nfor (var i = 0; i < modulesArr.length; i++) {\r\n    modules.push({module: modulesArr[i], modCode: modulesArr[i].split(\" \")[0]})\r\n}\r\n\r\nfunction EssentialModulesSelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickModule(event, val) {\r\n        props.stateSetter(val.map(mod => mod.modCode))\r\n    }\r\n\r\n    const defaultValue = \"selectedEssentialModules\" in localStorage\r\n        ? JSON.parse(localStorage.getItem(\"selectedEssentialModules\"))\r\n        : []\r\n\r\n    for (let i = 0; i < defaultValue.length; i++) {\r\n        defaultValue[i] = {\r\n            modCode: defaultValue[i], \r\n            module: defaultValue[i] + \" \" + moduleCodeTitleMappings[defaultValue[i]]}\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} className={classes.root}>\r\n            <Autocomplete\r\n                autoHighlight={true}\r\n                onChange={onClickModule}\r\n                multiple\r\n                limitTags={2}\r\n                id=\"multiple-limit-tags\"\r\n                options={modules}\r\n                getOptionLabel={(options) => options.module}\r\n                defaultValue={defaultValue}\r\n                renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                        <Chip\r\n                            style={{backgroundColor: \"#F6F6F6\", fontFamily: \"Courier New\"}}\r\n                            variant=\"outlined\"\r\n                            label={option.module}\r\n                            {...getTagProps({index})}    \r\n                        />\r\n                    ))\r\n                }\r\n                renderInput={(params) => (\r\n                    <TextField \r\n                        {...params} \r\n                        variant=\"outlined\" \r\n                        label={<div style={{fontFamily: \"Courier New\"}}>{\"Essential Modules\"}</div>} \r\n                    />\r\n                )}\r\n            />\r\n        </Grid>\r\n       \r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default EssentialModulesSelector","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./NavBar.css\"\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\n\r\nfunction NavBar(props) {\r\n\r\n    return (\r\n        <header class=\"navbar\">\r\n            <Grid container xs={12} justifyContent=\"center\">\r\n                <Grid container item xs={11} lg={10} style={{height: \"100%\", position: \"relative\"}}>\r\n                    <span id=\"navbar-icon-title\">\r\n                        <PublicIcon style={{color:\"white\", fontSize: \"2rem\"}}/>\r\n                        <Typography id=\"navbar-sepicker\">\r\n                            SEPicker\r\n                        </Typography>\r\n                    </span>\r\n\r\n                    <nav>\r\n                        <ul>\r\n                            <li id=\"navbar-selector\">\r\n                                <Link to='/'>Selector</Link>\r\n                            </li>\r\n                            {/* <li id=\"navbar-department\">\r\n                                <Link to='/department'>Department</Link>\r\n                            </li> */}\r\n                            <li id=\"navbar-favourites\">\r\n                                <Link to='/favourites'>Favourites</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </Grid>\r\n            </Grid>\r\n        \r\n            {/* <Typography> */}\r\n                {/* <nav>\r\n                    <ul>\r\n                        <li id=\"navbar-selector\">\r\n                            <Link to='/'>Selector</Link>\r\n                        </li>\r\n                        <li id=\"navbar-department\">\r\n                            <Link to='/department'>Department</Link>\r\n                        </li>\r\n                        <li id=\"navbar-favourites\">\r\n                            <Link to='/favourites'>Favourites</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav> */}\r\n            {/* </Typography> */}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React, { useState } from \"react\"\r\nimport './OptionalModuleSelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Chip, Grid, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        marginTop: 10,\r\n    },\r\n    }));\r\n\r\nconst modulesArr = require(\"../../data/reducedModules.json\")\r\nconst moduleCodeTitleMappings = require(\"../../data/moduleCodeTitleMappings.json\")\r\n\r\nconst modules = []\r\nfor (var i = 0; i < modulesArr.length; i++) {\r\n    modules.push({module: modulesArr[i], modCode: modulesArr[i].split(\" \")[0]})\r\n}\r\n\r\nfunction OptionalModulesSelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickModule(event, val) {\r\n        props.stateSetter(val.map(mod => mod.modCode));\r\n    }\r\n\r\n    const defaultValue = \"selectedOptionalModules\" in localStorage\r\n    ? JSON.parse(localStorage.getItem(\"selectedOptionalModules\"))\r\n    : []\r\n\r\n    for (let i = 0; i < defaultValue.length; i++) {\r\n        defaultValue[i] = {\r\n            modCode: defaultValue[i], \r\n            module: defaultValue[i] + \" \" + moduleCodeTitleMappings[defaultValue[i]]}\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} className={classes.root}>\r\n            <Autocomplete\r\n                fontFamily=\"Courier New\"\r\n                autoHighlight={true}\r\n                // style={{label: {fontFamily: \"Courier New\"}}}\r\n                onChange={onClickModule}\r\n                multiple\r\n                limitTags={2}\r\n                id=\"multiple-limit-tags\"\r\n                options={modules}\r\n                getOptionLabel={(options) => options.module}\r\n                defaultValue={defaultValue}\r\n                renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                        <Chip\r\n                            style={{backgroundColor: \"#F6F6F6\", fontFamily: \"Courier New\"}}\r\n                            variant=\"outlined\"\r\n                            label={option.module}\r\n                            {...getTagProps({index})}    \r\n                        />\r\n                    ))\r\n                }\r\n                renderInput={(params) => (\r\n                    <TextField \r\n                        {...params} \r\n                        variant=\"outlined\" \r\n                        label={<div style={{fontFamily: \"Courier New\"}}>{\"Optional Modules\"}</div>} \r\n                    />\r\n                )}\r\n            />\r\n        </Grid>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default OptionalModulesSelector","import React, { useState } from \"react\"\r\n// import './SchoolSelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, Chip } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        marginTop: 10,\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    }));\r\n\r\nconst schoolsArr = require(\"../../data/schools.json\")\r\nconst schools = []\r\nfor (var i = 0; i < schoolsArr.length; i++) {\r\n    schools.push({school: schoolsArr[i]})\r\n}\r\n\r\nfunction SchoolSelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickSchool(event, val) {\r\n        props.stateSetter(val.map(school => school.school))\r\n    }\r\n\r\n    const defaultValue = \"selectedSchools\" in localStorage\r\n        ? JSON.parse(localStorage.getItem(\"selectedSchools\"))\r\n        : []\r\n    for (let i = 0; i < defaultValue.length; i++) {\r\n        defaultValue[i] = {school: defaultValue[i]}\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} className={classes.root}>\r\n            <Autocomplete\r\n                autoHighlight={true}\r\n                onChange={onClickSchool}\r\n                multiple\r\n                limitTags={2}\r\n                id=\"multiple-limit-tags\"\r\n                options={schools}\r\n                getOptionLabel={(option) => option.school}\r\n                defaultValue={defaultValue}\r\n                renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                        <Chip\r\n                            style={{backgroundColor: \"#F6F6F6\", fontFamily: \"Courier New\"}}\r\n                            variant=\"outlined\"\r\n                            label={option.school}\r\n                            {...getTagProps({index})}    \r\n                        />\r\n                    ))\r\n                }\r\n                renderInput={(params) => (\r\n                    <TextField \r\n                        {...params} \r\n                        variant=\"outlined\" \r\n                        label={<div style={{fontFamily: \"Courier New\"}}>{\"Schools\"}</div>} \r\n                    />\r\n                )}\r\n            />\r\n        </Grid>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default SchoolSelector","import React, {useState} from \"react\"\r\nimport Multiselect from \"multiselect-react-dropdown\"\r\nimport * as Icon from \"react-icons/fi\"\r\n// import Checkbox from \"react-custom-checkbox\"\r\nimport nextId from 'react-id-generator'\r\nimport { FormGroup, FormControlLabel, Checkbox, Grid, Typography } from '@material-ui/core'\r\n\r\n\r\nfunction ContinentSelector(props) {\r\n    const continents = [\r\n        {name: 'Africa', label: 'Africa', id: 1}, \r\n        {name: 'Asia', label: 'Asia', id: 2}, \r\n        {name: 'Europe', label: 'Europe', id: 3}, \r\n        {name: 'North America', label: 'N. America', id: 4}, \r\n        {name: 'Oceania', label: 'Oceania', id: 5}, \r\n        {name: 'South America', label: 'S. America', id: 6}\r\n    ]\r\n    \r\n    // const [selectedContinents, setSelectedContinents] = useState([])\r\n    const selectedContinents = \"selectedContinents\" in localStorage\r\n        ? JSON.parse(localStorage.getItem(\"selectedContinents\"))\r\n        : []\r\n\r\n    function onClickContinentHandler(continent) {\r\n        props.stateSetter(prevState => {\r\n            if (prevState.includes(continent)) {\r\n                return prevState.filter(item => item != continent);\r\n            } else {\r\n                return [...prevState, continent];\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {continents.slice(0, 6).map(continent =>\r\n                <Grid item xs={4}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={props.state.includes(continent.name)} onChange={(event)=>(onClickContinentHandler(event.target.name))} name={continent.name} />}\r\n                        label={<div style={{fontFamily: \"Courier New\"}}>{continent.label}</div>}\r\n                    />\r\n                </Grid>\r\n            )}\r\n        </React.Fragment>\r\n        // <React.Fragment>\r\n        //     <div className=\"ContinentSelector\">\r\n        //         <h3>Continents</h3>\r\n        //     </div>\r\n        //     {continents.map(continent => \r\n        //         <Checkbox\r\n        //             key= {continent.id}\r\n        //             onChange = {event => onClickContinentHandler(continent.name)}\r\n        //             checked={false}\r\n        //             icon={\r\n        //                 <div\r\n        //                     style={{\r\n        //                     display: \"flex\",\r\n        //                     flex: 1,\r\n        //                     backgroundColor: \"#174A41\",\r\n        //                     alignSelf: \"stretch\",\r\n        //                     }}\r\n        //                 >\r\n        //                     <Icon.FiCheck color=\"white\" size={20} />\r\n        //                 </div>\r\n        //             }\r\n        //             borderColor=\"#174A41\"\r\n        //             borderWidth={0.000000000001}\r\n        //             borderRadius={20}\r\n        //             style={{ overflow: \"hidden\" }}\r\n        //             size={20}\r\n        //             label={continent.name}\r\n        //         />)}\r\n        //     {selectedContinents}\r\n        // </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ContinentSelector","import React, { useState } from \"react\"\r\n// import './CountrySelector.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, Chip } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        marginTop: 10,\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    }));\r\n\r\nconst countriesArr = require(\"../../data/countries.json\")\r\nconst countries = []\r\nfor (var i = 0; i < countriesArr.length; i++) {\r\n    countries.push({country: countriesArr[i]})\r\n}\r\n\r\nfunction CountrySelector(props) {\r\n\r\n    const classes = useStyles();\r\n    function onClickCountry(event, val) {\r\n        props.stateSetter(val.map(country => country.country))\r\n    }\r\n\r\n    const defaultValue = \"selectedCountries\" in localStorage\r\n        ? JSON.parse(localStorage.getItem(\"selectedCountries\"))\r\n        : []\r\n    for (let i = 0; i < defaultValue.length; i++) {\r\n        defaultValue[i] = {country: defaultValue[i]}\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} className={classes.root}>\r\n            <Autocomplete\r\n            autoHighlight={true}\r\n            onChange={onClickCountry}\r\n            multiple\r\n            limitTags={2}\r\n            id=\"multiple-limit-tags\"\r\n            options={countries}\r\n            getOptionLabel={(options) => options.country}\r\n            defaultValue={defaultValue}\r\n            renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                    <Chip\r\n                        style={{backgroundColor: \"#F6F6F6\", fontFamily: \"Courier New\"}}\r\n                        variant=\"outlined\"\r\n                        label={option.country}\r\n                        {...getTagProps({index})}    \r\n                    />\r\n                ))\r\n            }\r\n            renderInput={(params) => (\r\n                <TextField \r\n                    {...params} \r\n                    variant=\"outlined\" \r\n                    label={<div style={{fontFamily: \"Courier New\"}}>{\"Countries\"}</div>} \r\n                />\r\n            )}\r\n            />\r\n        </Grid>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default CountrySelector","import React, { useState, useEffect } from \"react\"\r\nimport School from \"./School\"\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\n\r\n\r\n\r\n\r\nfunction Country(props) {\r\n    const { countryName, result, useStyles, modulesCodeTitleMappings } = props\r\n\r\n    const [ open, setOpen ] = useState(false)\r\n    let schools = []\r\n    let i = 0\r\n    for (const school in result) {\r\n        schools[i] = school\r\n        i++;\r\n    }\r\n\r\n    schools.sort((schl1, schl2) => {\r\n        const numMappableDiff = result[schl2][\"num_mappable\"] - result[schl1][\"num_mappable\"]\r\n        if (numMappableDiff != 0) {\r\n            return numMappableDiff\r\n        } else {\r\n            return schl1.localeCompare(schl2)\r\n        }\r\n    })\r\n\r\n    const classes = useStyles();\r\n      \r\n\r\n    return (\r\n        // square={true} is bugged! We require this setting to get ROUNDED corners\r\n        <Grid item container justifyContent=\"center\">\r\n                <Accordion \r\n                className={classes.country} \r\n                TransitionProps={{ unmountOnExit: true}} \r\n                component={Paper}\r\n                elevation={3}\r\n                square={true}\r\n            >\r\n                <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                    <div>\r\n                            <Typography>\r\n                                <Box style={{fontFamily: \"Georgia, sans-serif\", fontWeight:\"bold\", fontSize:\"18px\" }}>{countryName}</Box>\r\n                                <Box fontSize=\"12px\" style={{fontFamily: \"Courier New\"}}>{schools.length} school(s) available!</Box>\r\n                            </Typography>\r\n                        {/* <Typography><Box fontWeight=\"fontWeightBold\">{countryName}</Box></Typography>\r\n                        <Typography>{schools.length} school(s) available!</Typography> */}\r\n                    </div>\r\n                </AccordionSummary>\r\n                    <Grid item container justifyContent=\"center\" spacing={1} xs={12}>\r\n                        {schools.map(school => {return (\r\n                                    <School \r\n                                        schoolName={school} \r\n                                        result={result[school]} \r\n                                        useStyles={useStyles}\r\n                                        modulesCodeTitleMappings={modulesCodeTitleMappings}/>\r\n                            )})}\r\n                    </Grid>\r\n            </Accordion>\r\n        </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default Country","import React, { useState, useEffect } from \"react\"\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport Country from \"./Country\"\r\n\r\n/*\r\nTODO\r\n    1. Conditional rendering to show if only continent/country has been selected\r\n    2. Load selected options into props\r\n        2.1 Results will be our point of entry into our algorithm to select universities\r\n*/\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    country: {\r\n        width: '80%',\r\n        justifyContent: \"center\",\r\n        padding: theme.spacing(2),\r\n        minWidth: 100,\r\n        background: \"#DDDDDF\",\r\n    },\r\n    tmp: {\r\n        padding: theme.spacing(1),\r\n        // minWidth: 200,\r\n        // maxWidth: 500\r\n    },\r\n    favourites: {\r\n        padding: theme.spacing(1),\r\n        minWidth: 300,\r\n        maxWidth: 720\r\n    },\r\n    school: {\r\n        width: '100%',\r\n        background: \"rgb(247,247,247)\",\r\n        minWidth: 100,\r\n        padding: theme.spacing(1),\r\n        // boxShadow: \"0 0 6px 1px rgb(150,150,150)\"\r\n    },\r\n    moduleMappingTitle: {\r\n        width: '100%',\r\n        // minWidth: 200,\r\n        background: \"red\"\r\n    },\r\n    moduleMappingPaper: {\r\n        width: \"100%\",\r\n        background: \"#edbb3d\",\r\n        // minWidth: 200,\r\n        padding: theme.spacing(1),\r\n    },\r\n    root: {\r\n        width: '80%',\r\n        minWidth: 500,\r\n        background: 'blue',\r\n    },\r\n    innerRoot: {\r\n        width: \"100%\",\r\n    },\r\n    }));\r\n\r\nconst modulesCodeTitleMappings = require(\"../../data/moduleCodeTitleMappings.json\")\r\n\r\nfunction Results(props) {\r\n\r\n    const { result } = props\r\n    const countryDetails = []\r\n    let i = 0\r\n    for (const continent in result) {\r\n        for (const country in result[continent]) {\r\n            countryDetails[i] = {\"countryName\": country, \"result\": result[continent][country]}\r\n            i++\r\n        }\r\n    }\r\n\r\n    // Display countries in order of how many schools are available, followed by lexicographic order\r\n    countryDetails.sort((countryA, countryB) => {\r\n        const lengthDiff = Object.keys(countryB.result).length - Object.keys(countryA.result).length\r\n        return lengthDiff !== 0\r\n            ? lengthDiff\r\n            : countryA[\"countryName\"].localeCompare(countryB[\"countryName\"])\r\n    })\r\n\r\n    \r\n    return (\r\n        <Grid container xs={12} justifyContent=\"center\" spacing={1}>\r\n            {countryDetails.map(countryDetail => <Country \r\n                countryName={countryDetail[\"countryName\"]} \r\n                result={countryDetail[\"result\"] } \r\n                useStyles={useStyles}\r\n                modulesCodeTitleMappings={modulesCodeTitleMappings}/>)}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Results","import React, { useState, useEffect } from \"react\"\r\nimport EssentialModulesSelector from \"../components/selector_components/EssentialModuleSelector\"\r\nimport OptionalModulesSelector from \"../components/selector_components/OptionalModuleSelector\"\r\nimport ContinentSelector from \"../components/selector_components/ContinentSelector\"\r\nimport SchoolSelector from \"../components/selector_components/SchoolSelector\"\r\nimport CountrySelector from \"../components/selector_components/CountrySelector\"\r\nimport Results from \"../components/selector_components/Results\"\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\n\r\nimport './Selector.css'\r\n\r\nimport { Collapse, Table, TableCell, Paper, Grid, Card, Typography, CircularProgress } from '@material-ui/core'\r\nimport { sizing } from '@material-ui/system';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\t\r\nfunction Selector(props) {\r\n\t\t// const [essentialModules, setEssentialModules] = useState(new Set())\r\n\t\t// const [optionalModules, setOptionalModules] = useState(new Set())\r\n\t\t// const [continents, setContinents] = useState(new Set())\r\n\t\t// const [countries, setCountries] = useState(new Set())\r\n\t\t// const [schools, setSchools] = useState(new Set())\r\n\r\n\t\tconst [selectedEssentialModules, setSelectedEssentialModules] = useState(\r\n\t\t\t\"selectedEssentialModules\" in localStorage \r\n\t\t\t\t? JSON.parse(localStorage.getItem(\"selectedEssentialModules\"))\r\n\t\t\t\t: []\r\n\t\t\t)\r\n\t\tconst [selectedOptionalModules, setSelectedOptionalModules] = useState(\r\n\t\t\t\"selectedOptionalModules\" in localStorage \r\n\t\t\t\t? JSON.parse(localStorage.getItem(\"selectedOptionalModules\"))\r\n\t\t\t\t: []\r\n\t\t\t)\r\n\t\tconst [selectedContinents, setSelectedContinents] = useState(\r\n\t\t\t\"selectedContinents\" in localStorage \r\n\t\t\t\t? JSON.parse(localStorage.getItem(\"selectedContinents\"))\r\n\t\t\t\t: []\r\n\t\t\t)\r\n\t\tconst [selectedCountries, setSelectedCountries] = useState(\r\n\t\t\t\"selectedCountries\" in localStorage \r\n\t\t\t\t? JSON.parse(localStorage.getItem(\"selectedCountries\"))\r\n\t\t\t\t: []\r\n\t\t\t)\r\n\t\tconst [selectedSchools, setSelectedSchools] = useState(\r\n\t\t\t\"selectedSchools\" in localStorage \r\n\t\t\t\t? JSON.parse(localStorage.getItem(\"selectedSchools\"))\r\n\t\t\t\t: []\r\n\t\t\t)\r\n\r\n\r\n\t\tconst [result, setResult] = useState({});\r\n\t\tconst [loading, setLoading] = useState(false);\r\n\t\tconst body = {\r\n\t\t\t\tessential_modules: selectedEssentialModules,\r\n\t\t\t\toptional_modules: selectedOptionalModules,\r\n\t\t\t\tschools: selectedSchools,\r\n\t\t\t\tcountries: selectedCountries,\r\n\t\t\t\tcontinents: selectedContinents\r\n\t\t\t}\r\n\r\n\t\tlocalStorage.setItem(\"selectedEssentialModules\", JSON.stringify(selectedEssentialModules))\r\n\t\tlocalStorage.setItem(\"selectedOptionalModules\", JSON.stringify(selectedOptionalModules))\r\n\t\tlocalStorage.setItem(\"selectedContinents\", JSON.stringify(selectedContinents))\r\n\t\tlocalStorage.setItem(\"selectedCountries\", JSON.stringify(selectedCountries))\r\n\t\tlocalStorage.setItem(\"selectedSchools\", JSON.stringify(selectedSchools))\r\n\t\t\r\n\t\tconst [ moduleTooltipOpen, setModuleTooltipOpen ] = useState(false)\r\n\t\tconst [ locationTooltipOpen, setLocationTooltipOpen ] = useState(false)\r\n\r\n\t\tprops.setTitle(\"SEPicker - Selector\")\r\n\r\n\r\n\r\n\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetLoading(true)\r\n\t\t\tfetch('https://sepicker.herokuapp.com/backend', {\r\n\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: JSON.stringify(body)\r\n\t\t\t}).then(res => res.json())\r\n\t\t\t\t.then(data => {setLoading(false); setResult(data)})\r\n\t\t\t\t.catch(err => console.log(err))\r\n\t\t}, [selectedEssentialModules, selectedOptionalModules, selectedContinents, selectedCountries, selectedSchools])\r\n\r\n\r\n\t\treturn (\r\n\t\t\t\t<div className=\"Selector\">\r\n\t\t\t\t\t\t<Grid container item xs={12} spacing={0} justifyContent=\"center\">\r\n                \r\n\t\t\t\t\t\t\t<Grid container item xs={11} lg={5} justifyContent=\"center\">\r\n\r\n\t\t\t\t\t\t\t\t<Grid container item component={Paper} elevation={5} xs={12} spacing={0} justifyContent=\"center\" id=\"left-box\" style={{backgroundColor: \"#29648A\", paddingTop: \"2vh\", margin: \"0vw 1vw 2vw 1vw\"}}>\r\n\t\t\t\t\t\t\t\t\t<Grid spacing={0} item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container item justifyContent=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container item xs={12} justifyContent=\"center\" style={{color: \"white\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h4\" style={{fontFamily: \"Georgia, sans-serif\"}}>Preferences</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container item xs={11} component={Paper} justifyContent=\"center\" style={{backgroundColor: \"#DDDDDF\", margin: \"2% 0% 2% 0%\", padding: \"3%\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid container item xs={12} alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h5\" style={{display: \"inline-block\", paddingRight: \"1%\", fontFamily: \"Georgia, sans-serif\", fontWeight: \"bold\"}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>Modules\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ClickAwayListener onClickAway={() => setModuleTooltipOpen(false)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\topen={moduleTooltipOpen}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableFocusListener\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setModuleTooltipOpen(true)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle='Only schools that fulfill ALL essential modules will be shown. Mappings for optional modules will be shown if the school contains them. You can select optional modules without essential modules.'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton style={{color: \"grey\"}} size=\"small\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<HelpOutlineIcon/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ClickAwayListener>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<EssentialModulesSelector stateSetter={setSelectedEssentialModules} state={selectedEssentialModules}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<OptionalModulesSelector stateSetter={setSelectedOptionalModules}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container item xs={11} component={Paper} justifyContent=\"center\" style={{backgroundColor: \"#DDDDDF\", margin: \"2% 0% 2% 0%\", padding: \"3%\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid container item xs={12} alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h5\" style={{display: \"inline-block\", paddingRight: \"1%\", fontFamily: \"Georgia, sans-serif\", fontWeight: \"bold\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tLocations\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ClickAwayListener onClickAway={() => setLocationTooltipOpen(false)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\topen={locationTooltipOpen}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableFocusListener\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setLocationTooltipOpen(true)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle='All schools in selected regions will be considered. If nothing is selected, all schools will be considered.'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton style={{color: \"grey\"}} size=\"small\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<HelpOutlineIcon />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ClickAwayListener>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ContinentSelector stateSetter={setSelectedContinents} state={selectedContinents}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CountrySelector stateSetter={setSelectedCountries}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SchoolSelector stateSetter={setSelectedSchools}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid> \r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid container item xs={11} lg={5}>\r\n\r\n\t\t\t\t\t\t\t\t<Grid container item component={Paper} xs={12} elevation={5} spacing={0} justifyContent=\"center\" id=\"right-box\" style={{backgroundColor: \"#29648A\", paddingTop: \"2vh\", margin: \"0vw 1vw 2vw 1vw\", paddingBottom: \"9%\"}}>\r\n\t\t\t\t\t\t\t\t\t<Grid spacing={0} item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container item xs={12} justifyContent=\"center\" style={{color: \"white\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h4\" style={{fontFamily: \"Georgia, sans-serif\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tResults\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid container item xs={12} style={{paddingTop: \"0%\"}} justifyContent=\"center\" alignItems=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{loading\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? <div><br></br><Typography variant=\"h6\" style={{fontFamily: \"Courier New\", color: \"white\"}}>Loading...</Typography></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: selectedEssentialModules.length + selectedOptionalModules.length === 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? <div><br></br><Typography variant=\"h6\" style={{fontFamily: \"Courier New\", color: \"white\"}}>No module selected yet</Typography></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: Object.keys(result).length === 0 \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? <div><br></br><Typography variant=\"h6\" style={{fontFamily: \"Courier New\", color: \"white\"}}>No pre-approved mappings found</Typography></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: <Grid container justifyContent=\"center\" xs={12} style={{marginTop: \"2%\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Results result={result}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>}\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid> \r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t{/* <Grid item xs={11} lg={5} style={{height:\"100vh\"}}>\r\n\t\t\t\t\t\t\t\t<Paper id=\"right-box\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid container justifyContent=\"center\" xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h3\">Results</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container justifyContent=\"center\" xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t{loading\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <h2>Loading...</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: selectedEssentialModules.length + selectedOptionalModules.length === 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t? <h2>No Module Selected Yet</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: Object.keys(result).length === 0 \r\n\t\t\t\t\t\t\t\t\t\t\t\t? <h2>No mappings found :(</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: <p></p>}\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container justifyContent=\"center\" xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Results result={result}/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Grid> */}\r\n\r\n\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t// <Grid container xs={12}>\r\n\t\t\t//   <Grid container component={Paper} item xs={6}>\r\n\t\t\t//     <Grid container xs={12}>\r\n\t\t\t//       <Grid item xs={2}></Grid>\r\n\t\t\t//       <Grid container spacing={1} item xs={8}>\r\n\t\t\t//           <Grid item xs={12}>\r\n\t\t\t//             <Paper style={{textAlign: 'center'}}>sxs=3</Paper>\r\n\t\t\t//           </Grid>\r\n\t\t\t//           <Grid item xs={12}>\r\n\t\t\t//             <Paper style={{textAlign: 'center'}}>xs=3</Paper>\r\n\t\t\t//           </Grid>\r\n\t\t\t//           <Grid item xs={12}>\r\n\t\t\t//             <Paper style={{textAlign: 'center'}}>xs=3</Paper>\r\n\t\t\t//           </Grid>\r\n\t\t\t//           <Grid item xs={3}>\r\n\t\t\t//             <Paper style={{textAlign: 'center'}}>xs=3</Paper>\r\n\t\t\t//           </Grid>\r\n\t\t\t//           <Grid item xs={8}>\r\n\t\t\t//             <Paper style={{textAlign: 'center'}}>xs=8</Paper>\r\n\t\t\t//           </Grid>\r\n\t\t\t//       </Grid>\r\n\t\t\t//     </Grid>\r\n\t\t\t//   </Grid>\r\n\r\n\t\t\t// </Grid>\r\n\t\t)\r\n}\r\n\r\nexport default Selector","import React, { Component, useState, useEffect } from \"react\"\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet'\r\nimport ReactGa from 'react-ga'\r\nimport Favourites from \"./pages/Favourites\"\r\nimport NavBar from \"./components/NavBar\"\r\nimport Selector from \"./pages/Selector\"\r\n// import 'bootstrap/dist/css/bootstrap\r\n\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport { TableHead, TableRow, TableCell, TableContainer, Paper, TextField, Grid, Checkbox, FormControlLabel, Tooltip, Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    app: {\r\n        width: \"100%\",\r\n        minWidth: 550,\r\n        backgroundColor: \"#F6F6F6\"\r\n    },\r\n    country: {\r\n        width: '80%',\r\n        justifyContent: \"center\",\r\n        padding: theme.spacing(2),\r\n        minWidth: 100,\r\n        background: \"#42a7f5\",\r\n    },\r\n    tmp: {\r\n        padding: theme.spacing(1),\r\n        // minWidth: 200,\r\n        // maxWidth: 500\r\n    },\r\n    favourites: {\r\n        padding: theme.spacing(1),\r\n        minWidth: 300,\r\n        maxWidth: 720\r\n    },\r\n    school: {\r\n        width: '100%',\r\n        background: \"#42f5a4\",\r\n        minWidth: 100,\r\n        padding: theme.spacing(1),\r\n    },\r\n    moduleMappingTitle: {\r\n        width: '100%',\r\n        // minWidth: 200,\r\n        background: \"red\"\r\n    },\r\n    moduleMappingPaper: {\r\n        width: \"100%\",\r\n        background: \"orange\",\r\n        // minWidth: 200,\r\n        padding: theme.spacing(1),\r\n    },\r\n    root: {\r\n        width: '80%',\r\n        minWidth: 500,\r\n        background: 'blue',\r\n    },\r\n    innerRoot: {\r\n        width: \"100%\",\r\n    },\r\n    }));\r\n\r\nconst scale = visualViewport.width < 550 ? visualViewport.width/550 : 1\r\nconst metaContent = \"width=device-width,initial-scale=\" + scale\r\n\r\nfunction App() {\r\n\r\n    const [ page, setPage ] = useState(\"Selector\")\r\n    // favourites should be a set of strings, where each element is \"uni_name, MOD1, MOD2, ..., MODn\"\r\n    // modules must be in sorted order\r\n\r\n    let favouriteNames = null\r\n    if (\"favouriteNames\" in localStorage) {\r\n        favouriteNames = JSON.parse(localStorage.getItem(\"favouriteNames\"))\r\n\r\n    } else {\r\n        favouriteNames = []\r\n        localStorage.setItem(\"favouriteNames\", JSON.stringify(favouriteNames))\r\n    }\r\n\r\n    const [ favourites, setFavourites ] = useState(favouriteNames)\r\n    const [ title, setTitle ] = useState(\"SEPicker\")\r\n    document.title = title\r\n\r\n    const classes = useStyles()\r\n\r\n    const BenjaminsLink = \"https://www.linkedin.com/in/benjamin-lee-b7975819a/\"\r\n    const ZhiLongsLink = \"https://www.linkedin.com/in/zhi-long-yeo/\"\r\n    const githubPage = \"https://github.com/yzhilong/SEPickerV2\"\r\n    \r\n\r\n    useEffect(() => {\r\n        ReactGa.initialize('UA-204358478-1')\r\n        ReactGa.pageview('/')\r\n        // console.log(\"GA\")\r\n    }, [])\r\n    return (\r\n        <div style={{height: \"100vh\", backgroundColor:\"#F6F6F6\"}}>\r\n            <Helmet>\r\n                <meta name=\"viewport\" content={`${metaContent}`}/>\r\n            </Helmet>\r\n            <Grid className={classes.app} >\r\n                <NavBar />\r\n                <Route path=\"/\" exact>\r\n                    <Selector \r\n                        favourites={favourites}\r\n                        setFavourites={setFavourites}\r\n                        setTitle={setTitle}\r\n                    /> \r\n                </Route>\r\n                <Route path=\"/favourites\" exact>\r\n                    <Favourites\r\n                        favourites={favourites}\r\n                        setFavourites={setFavourites}\r\n                        setTitle={setTitle}\r\n                    />\r\n                </Route>\r\n            </Grid>\r\n            <div style={{backgroundColor: \"#F6F6F6\", paddingTop:\"10px\"}}><br/></div>\r\n            <footer align=\"center\" style={{position: \"fixed\", bottom: 0, borderTop: \"1px solid rgb(150,150,150)\"}} className={classes.app}>\r\n                <Typography style={{fontSize: \"80%\", fontStyle: \"italic\", fontFamily: \"Courier New\", opacity: \"100%\"}}>\r\n                    This website was created by <a href={BenjaminsLink}>Benjamin</a> and <a href={ZhiLongsLink}>Zhi Long</a>,\r\n                    an overhaul of our <a href=\"https://github.com/tangboxuan/SEPicker\">HackNRoll project</a>. \r\n                    {/* Checkout our code <a href={githubPage}>here!</a> */}\r\n                </Typography>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React, { useState, useEffect } from \"react\"\r\nimport ModuleMapping from \"./ModuleMapping\"\r\n\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Table from \"@material-ui/core/Table\"\r\nimport { TableHead, TableRow, TableCell, TableContainer, Paper, TextField, Grid, Checkbox, FormControlLabel, Tooltip, Box } from \"@material-ui/core\";\r\n\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport { LocalSeeOutlined } from \"@material-ui/icons\";\r\n\r\nconst schoolCityMappings = require(\"../../data/cities.json\")\r\n\r\nfunction School(props) {\r\n    const { schoolName, result, useStyles, modulesCodeTitleMappings, setSchools } = props\r\n    // result = {\"mappings\": {...}, \"num_mappable\": int}\r\n\r\n    function toString() {\r\n        return schoolName + Object.keys(result.mappings).join();\r\n    }\r\n\r\n    const [ open, setOpen ] = useState(false)\r\n\r\n    const defaultNote = (toString()+\"notes\" in localStorage) ? localStorage.getItem(toString()+\"notes\") : \"\"\r\n    const [ notes, setNotes ] = useState(defaultNote)\r\n\r\n\r\n    // Not very sure why this fixes the bug\r\n    let [ favourited, setFavourited ] = useState(toString() in localStorage)\r\n    favourited = toString() in localStorage\r\n\r\n    // console.log(toString())\r\n    // console.log(toString() in localStorage ? \"yes\" : \"no\") // 1\r\n    // console.log(favourited ? \"yes2\" : \"no2\") // 2\r\n\r\n    function onFavHandler(event) {\r\n        // console.log(toString() + favourited.toString())\r\n        if (event.target.checked) {\r\n            setFavourited(true)\r\n            setNotes(notes)\r\n            localStorage.setItem(toString(),JSON.stringify(result))\r\n            const favouriteNames = JSON.parse(localStorage.getItem(\"favouriteNames\"))\r\n            favouriteNames[favouriteNames.length] = toString()\r\n            // console.log(favouriteNames)\r\n            localStorage.setItem(\r\n                \"favouriteNames\", \r\n                JSON.stringify(favouriteNames)\r\n            )\r\n\r\n        } else {\r\n            // console.log(toString() + favourited.toString())\r\n            setFavourited(false)\r\n            localStorage.removeItem(toString())\r\n\r\n            const newFavouriteNames = JSON.parse(localStorage.getItem(\"favouriteNames\")).filter(name => name != toString())\r\n            localStorage.setItem(\r\n                \"favouriteNames\", \r\n                JSON.stringify(newFavouriteNames)\r\n            )\r\n            if (setSchools !== undefined) {\r\n                setSchools(newFavouriteNames)\r\n            }\r\n        }\r\n    }\r\n\r\n    const modules = []\r\n    let i = 0\r\n    for (const module in result[\"mappings\"]) {\r\n        modules[i] = module\r\n        i++;\r\n    }\r\n\r\n    const classes = useStyles(); \r\n    const moduleMappings = modules.map(module => <ModuleMapping \r\n        moduleName={module} \r\n        result={result[\"mappings\"][module]} \r\n        useStyles={useStyles}\r\n        modulesCodeTitleMappings={modulesCodeTitleMappings}/>)\r\n\r\n    // console.log(favourited + \" \" + toString())\r\n\r\n    function showModules() {\r\n        if (modules.length === 1) return modules[0]\r\n\r\n        let output = \"\"\r\n        for (let i = 0; i < modules.length - 1; i++) {\r\n            module = modules[i]\r\n            output += \", \" + module\r\n        }\r\n        output += \" and \" + modules[modules.length - 1]\r\n        return output.slice(2,output.length)\r\n    }\r\n\r\n    return (\r\n        <Grid container item xs={12}>\r\n            <Accordion \r\n                className={classes.school} \r\n                TransitionProps={{ unmountOnExit: true }}\r\n                component={Paper}\r\n                elevation={2}\r\n                square={true}\r\n                >\r\n                <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                    <Grid container item xs={12} alignItems=\"center\" justifyContent=\"center\">\r\n                        <Grid item xs={1}>\r\n                            <Tooltip title={favourited ? \"Remove from Favourites\" : \"Add to Favourites\"}>\r\n                                <FormControlLabel\r\n                                    aria-label=\"Acknowledge\"\r\n                                    onClick={(event) => event.stopPropagation()}\r\n                                    onFocus={(event) => event.stopPropagation()}\r\n                                    control={<Checkbox \r\n                                        checkedIcon={<FavoriteIcon />} \r\n                                        icon={<FavoriteBorderIcon />}\r\n                                        checked={favourited}\r\n                                        onChange={onFavHandler}\r\n                                        />}\r\n                                    label=\"\"\r\n                                />\r\n                            </Tooltip>\r\n                        </Grid>\r\n                        <Grid item xs={1}></Grid>\r\n                        <Grid item xs={9}>\r\n                            <Typography >\r\n                                <Box fontWeight=\"fontWeightBold\" fontSize=\"18px\" style={{fontFamily: \"Georgia, sans-serif\"}}>{schoolName}</Box>\r\n                                <Box fontSize=\"12px\" style={{fontFamily: \"Courier New\"}}>{schoolCityMappings[schoolName]}</Box>\r\n                                <Box fontSize=\"12px\" style={{fontFamily: \"Courier New\"}}>{showModules()} available</Box>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                            <Box \r\n                                style={{backgroundColor: \"#edbb3d\", fontWeight: \"bold\", fontFamily: \"Georgia, sans-serif\"}}\r\n                                textAlign=\"center\" \r\n                                component={Paper} \r\n                                square={false} \r\n                                width=\"auto\" \r\n                                maxWidth={25}\r\n                                minWidth={25}\r\n                                maxHeight={25}\r\n                                minHeight={25}\r\n                            >\r\n                                {result['num_mappable']}\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </AccordionSummary>\r\n\r\n                <Grid container item xs={12} spacing={0} justifyContent=\"center\">\r\n                    {moduleMappings}\r\n                </Grid>\r\n\r\n                <Grid container item xs={12} spacing={0} justifyContent=\"center\" className={classes.tmp}>\r\n                    <Grid item xs={12}>\r\n                        <Box \r\n                            style={{\r\n                                paddingLeft: \"5px\",\r\n                                paddingRight: \"5px\",\r\n                                paddingBottom: \"3px\",\r\n                                backgroundColor: \"#F1F1F1\"}}\r\n                            component={Paper}\r\n                        >\r\n                            <TextField \r\n                            label={<div style={{fontFamily: \"Georgia, sans-serif\"}}>Notes</div>}\r\n                            InputProps={{style: {fontFamily: \"Georgia, sans-serif\"}}}\r\n                            multiline={true}\r\n                            className={classes.innerRoot}\r\n                            maxRows={6}\r\n                            value={notes}\r\n                            onChange={event => {\r\n                                setNotes(event.target.value)\r\n                                localStorage.setItem(toString()+\"notes\", event.target.value)\r\n                            }}\r\n                            />\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Accordion>\r\n        </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default School"],"sourceRoot":""}